{"version":3,"sources":["components/Ribbon/PropertiesPanel/TextPropertiesPanel/TextPropertiesPanel.module.css","components/Ribbon/DropdownMenu/DropdownItem/DropdownItem.module.css","components/Workspace/EditableSlideView/Elements/EditableElement.module.css","components/Ribbon/DropdownMenu/Dropdown/Dropdown.module.css","components/Ribbon/PropertiesPanel/PrimitivePropertiesPanel/PrimitivePropertiesPanel.module.css","components/SlidePanel/SlideThumbnail/SlideThumbnail.module.css","components/Ribbon/Ribbon.module.css","components/Ribbon/PresentationTitle/PresentationTitle.module.css","components/Ribbon/DropdownMenu/DropdownMenu.module.css","components/Ribbon/PropertiesPanel/PropertiesPanel.module.css","components/SlidePanel/SlidePanel.module.css","components/SlidePanel/SlideView/SlideView.module.css","App.module.css","components/Workspace/Workspace.module.css","components/Workspace/EditableSlideViewWrapper/EditableSlideViewWrapper.module.css","components/Workspace/EditableSlideView/EditableSlideView.module.css","state/actions/actions.ts","state/actions/actionCreators.ts","components/Ribbon/PresentationTitle/PresentationTitle.tsx","components/Ribbon/RibbonTypes.ts","components/Ribbon/DropdownMenu/DropdownItem/DropdownItem.tsx","components/Ribbon/DropdownMenu/Dropdown/Dropdown.tsx","hooks/useEventListener.ts","hooks/mouse/useOnClickOutside.ts","components/Ribbon/DropdownMenu/DropdownMenu.tsx","model/types.ts","model/uuid.ts","model/constants.ts","model/modelUtils.ts","components/Ribbon/PropertiesPanel/PrimitivePropertiesPanel/PrimitivePropertiesPanel.tsx","components/Ribbon/PropertiesPanel/TextPropertiesPanel/TextPropertiesPanel.tsx","model/uiParameters/textProperties.ts","components/Ribbon/PropertiesPanel/PropertiesPanel.tsx","components/Ribbon/Ribbon.tsx","components/SlidePanel/SlideView/Elements/TextElementView/TextElementView.tsx","components/SlidePanel/SlideView/Elements/ImageElementView/ImageElementView.tsx","components/SlidePanel/SlideView/Elements/PrimitiveElementView/RectanglePrimitive.tsx","common/componentsUtils.ts","components/SlidePanel/SlideView/Elements/PrimitiveElementView/EllipsePrimitive.tsx","components/SlidePanel/SlideView/Elements/PrimitiveElementView/TrianglePrimitive.tsx","components/SlidePanel/SlideView/Elements/PrimitiveElementView/PrimitiveElementView.tsx","components/SlidePanel/SlideView/SlideView.tsx","components/SlidePanel/SlideThumbnail/SlideThumbnail.tsx","hooks/hotkeys/useHotkey.ts","components/SlidePanel/SlidePanel.tsx","hooks/useConfirmLeaving.ts","hooks/dragAndDrop/useDragAndDrop.ts","hooks/dragAndDrop/useSlideElementDragAndDrop.ts","hooks/useSlideElementActions.ts","hooks/useSlideElementResize.ts","components/Workspace/EditableSlideView/Elements/EditableImageElement/EditableImageElement.tsx","hooks/mouse/useDoubleClick.ts","components/Workspace/EditableSlideView/Elements/EditableTextElement/EditableTextElement.tsx","components/Workspace/EditableSlideView/Elements/EditablePrimitiveElement/EditablePrimitiveElement.tsx","hooks/dragAndDrop/useScaleFactorForDragAndDrop.ts","components/Workspace/EditableSlideView/EditableSlideView.tsx","hooks/useFullscreen.ts","components/Workspace/EditableSlideViewWrapper/EditableSlideViewWrapper.tsx","components/Workspace/Workspace.tsx","hooks/hotkeys/useHotkeyCtrl.ts","hooks/hotkeys/useAppHotkeys.ts","common/fileUtils.ts","App.tsx","model/uiParameters/menu.ts","model/actions.ts","state/reducers/editorReducer.ts","state/reducers/undoable.ts","state/reducers/index.ts","state/store.ts","index.tsx"],"names":["module","exports","ActionType","STATEFUL_ACTIONS","SET_TEXT_VALUE","SET_TEXT_FONT","SET_TEXT_SIZE","MOVE_ELEMENTS","RESIZE_ELEMENT","REMOVE_ELEMENTS","ADD_SLIDE","REMOVE_SLIDES","SET_SLIDE_BACKGROUND_IMAGE","SET_SLIDE_BACKGROUND_COLOR","ADD_TEXT","ADD_IMAGE","ADD_PRIMITIVE","openPresentation","presentation","dispatch","type","OPEN_PRESENTATION","payload","newPresentation","NEW_PRESENTATION","changePresentationTitle","title","CHANGE_PRESENTATION_TITLE","setTextValue","elementID","value","setTextFont","font","setTextSize","size","setTextColor","color","SET_TEXT_COLOR","setPrimitiveFillColor","fill","SET_PRIMITIVE_FILL_COLOR","setPrimitiveStrokeColor","stroke","SET_PRIMITIVE_STROKE_COLOR","selectElement","SELECT_ELEMENT","unselectElement","UNSELECT_ELEMENT","moveElements","positionDiff","resizeElement","dimensions","removeElements","addSlide","removeSlides","nextSlide","NEXT_SLIDE","previousSlide","PREVIOUS_SLIDE","setSlideBackgroundImage","src","setSlideBackgroundColor","setCurrentSlide","slideID","SET_CURRENT_SLIDE","selectSlide","SELECT_SLIDE","setFirstCurrentSlide","SET_FIRST_CURRENT_SLIDE","addText","position","addImage","addPrimitive","primitiveType","undo","UNDO","redo","REDO","startDemonstration","START_DEMONSTRATION","stopDemonstration","STOP_DEMONSTRATION","connect","MenuItemType","state","useDispatch","bindActionCreators","actionCreators","useState","editingValue","setEditingValue","className","styles","onChange","event","currentTarget","onKeyDown","key","blur","onBlur","trim","onFocus","select","DropdownItem","item","onClick","isNestedVisible","setIsNestedVisible","href","preventDefault","MenuButton","action","label","icon","itemIcon","Submenu","nested","items","map","subItem","subItemIcon","Dropdown","isVisible","itemLabel","dropdownList","useEventListener","eventName","handler","ref","savedHandler","useRef","useEffect","targetElement","current","window","addEventListener","eventListener","e","removeEventListener","useOnClickOutside","includedElements","parent","element","contains","target","every","el","DropdownMenu","ElementType","PrimitiveType","BackgroundType","menuItems","initialVisibility","Array","length","visibility","setVisibility","menu","menuItem","index","i","generateUUID","replace","c","r","Math","random","toString","SLIDE_WIDTH","DEFAULT_ELEMENT_POSITION","x","y","DEFAULT_TEXT_DIMENSIONS","width","height","DEFAULT_PRIMITIVE_DIMENSIONS","createNewSlide","id","background","SOLID","elements","createNewPresentation","slides","createEditor","selections","selectedSlideIDs","selectedElementIDs","history","pastStates","futureStates","isDemonstrating","concatWithSelectedSlideElements","editor","slide","isCurrentSlide","concat","isCurrentElement","selectNearestUnselectedSlide","firstSelectedSlideIndex","findIndex","newSlides","filter","includes","moveElementOnTop","splice","push","getCurrentSlideIndex","reduce","savedIndex","saveState","newEditor","historyState","slice","PRIMITIVE","currentElement","undefined","primitivePropertiesPanel","panelElement","defaultValue","onInput","TEXT","textProps","fonts","sizes","textPropertiesPanel","name","fontSelection","fontOption","sizeSelection","parseInt","sizeValue","selectedElementType","propsPanel","IMAGE","Ribbon","ribbon","TextElementView","dominantBaseline","textAnchor","style","fontFamily","fontSize","ImageElementView","preserveAspectRatio","RectanglePrimitive","getSlideBackgroundStyle","backgroundColor","backgroundImage","calculateEllipseProperties","cx","cy","rx","ry","getTrianglePoints","firstPoint","secondPoint","thirdPoint","getResizeAnchorProperties","getResizeAnchorTranslateDelta","delta","EllipsePrimitive","properties","TrianglePrimitive","points","PrimitiveElementView","RECTANGLE","TRIANGLE","ELLIPSE","SlideView","slideBackgroundStyle","viewBox","slideview","SlideThumbnail","isSelected","displayedSlide","slidethumbnail","border","slideindex","useHotkey","slidepanel","tabIndex","ctrlKey","useConfirmLeaving","handleBeforeUnload","returnValue","Boolean","useDragAndDrop","onStart","onMove","onFinish","savedOnFinish","onMouseDown","button","onMouseMove","onMouseUp","useElementDragAndDrop","scaleFactor","setDelta","startPos","pageX","pageY","useSlideElementActions","containerRef","resizeAnchorRef","useSlideElementResize","setDimensions","EditableImageElement","parentRef","useSlideElementDragAndDrop","resizeAnchorDelta","onDragStart","transform","fillOpacity","strokeOpacity","resizeAnchor","useDoubleClick","onDoubleClick","latency","clickCount","setClickCount","handleClick","setTimeout","EditableTextElement","newValue","prompt","userSelect","EditablePrimitiveElement","getPrimitiveElement","useScaleFactorForDragAndDrop","setScaleFactor","onResize","console","log","getBoundingClientRect","find","editableSlideView","useFullscreen","isFullscreen","onFullscreenExit","view","document","fullscreenElement","requestFullscreen","catch","error","alert","message","onFullscreenChange","wrapper","Workspace","workspace","useHotkeyCtrl","useAppHotkeys","savePresentation","openFile","Promise","resolve","input","createElement","files","click","openImageBase64","reject","then","file","reader","FileReader","result","image","Image","readAsDataURL","confirm","JSON","parse","readAsText","filename","Blob","stringify","url","URL","createObjectURL","link","download","revokeObjectURL","savePresentationJSON","text","aspectRatio","scaleImage","startDemonstrationFromStart","removeSlide","getRibbonMenuItems","main","setPresentationTitle","newSlide","flatMap","currentSlideIndex","currentHistoryState","previousHistoryState","nextHistoryState","initialState","editorReducer","undoable","reducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.669db6de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textPropertiesPanel\":\"TextPropertiesPanel_textPropertiesPanel__2fNZd\",\"panelElement\":\"TextPropertiesPanel_panelElement__3MhE1\",\"fontSelection\":\"TextPropertiesPanel_fontSelection__ymHFO\",\"sizeSelection\":\"TextPropertiesPanel_sizeSelection__2qlKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DropdownItem_item__Qc155\",\"itemIcon\":\"DropdownItem_itemIcon__2YAtZ\",\"subItemIcon\":\"DropdownItem_subItemIcon__vzQZv\",\"nested\":\"DropdownItem_nested__2WNdK\",\"subItem\":\"DropdownItem_subItem__3YWjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resizeAnchor\":\"EditableElement_resizeAnchor__10I-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dropdown_item__3P1vf\",\"itemLabel\":\"Dropdown_itemLabel__1xk0k\",\"dropdownList\":\"Dropdown_dropdownList__XHhN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primitivePropertiesPanel\":\"PrimitivePropertiesPanel_primitivePropertiesPanel__1jvLO\",\"panelElement\":\"PrimitivePropertiesPanel_panelElement__3Z52g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slidethumbnail\":\"SlideThumbnail_slidethumbnail__1umVe\",\"slideindex\":\"SlideThumbnail_slideindex__2U2w5\",\"slideview\":\"SlideThumbnail_slideview__N13bv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ribbon\":\"Ribbon_ribbon__2hz8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PresentationTitle_title__1gtYC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"DropdownMenu_menu__3Sy-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"propsPanel\":\"PropertiesPanel_propsPanel__2WDHC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slidepanel\":\"SlidePanel_slidepanel__1_6j6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slideview\":\"SlideView_slideview__3FBtp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__16hI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workspace\":\"Workspace_workspace__2jLi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EditableSlideViewWrapper_wrapper__3RiKA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSlideView\":\"EditableSlideView_editableSlideView__217jt\"};","export enum ActionType {\r\n  OPEN_PRESENTATION,\r\n  NEW_PRESENTATION,\r\n  CHANGE_PRESENTATION_TITLE,\r\n  SET_TEXT_VALUE,\r\n  SET_TEXT_FONT,\r\n  SET_TEXT_SIZE,\r\n  SET_TEXT_COLOR,\r\n  SET_PRIMITIVE_FILL_COLOR,\r\n  SET_PRIMITIVE_STROKE_COLOR,\r\n  SELECT_ELEMENT,\r\n  UNSELECT_ELEMENT,\r\n  MOVE_ELEMENTS,\r\n  RESIZE_ELEMENT,\r\n  REMOVE_ELEMENTS,\r\n  ADD_SLIDE,\r\n  REMOVE_SLIDES,\r\n  NEXT_SLIDE,\r\n  PREVIOUS_SLIDE,\r\n  SET_SLIDE_BACKGROUND_IMAGE,\r\n  SET_SLIDE_BACKGROUND_COLOR,\r\n  SET_CURRENT_SLIDE,\r\n  SELECT_SLIDE,\r\n  SET_FIRST_CURRENT_SLIDE,\r\n  ADD_TEXT,\r\n  ADD_IMAGE,\r\n  ADD_PRIMITIVE,\r\n  UNDO,\r\n  REDO,\r\n  START_DEMONSTRATION,\r\n  STOP_DEMONSTRATION,\r\n}\r\n\r\nexport const STATEFUL_ACTIONS = [\r\n  ActionType.SET_TEXT_VALUE,\r\n  ActionType.SET_TEXT_FONT,\r\n  ActionType.SET_TEXT_SIZE,\r\n  // TODO: #65\r\n  // ActionType.SET_TEXT_COLOR,\r\n  // ActionType.SET_PRIMITIVE_FILL_COLOR,\r\n  // ActionType.SET_PRIMITIVE_STROKE_COLOR,\r\n  ActionType.MOVE_ELEMENTS,\r\n  ActionType.RESIZE_ELEMENT,\r\n  ActionType.REMOVE_ELEMENTS,\r\n  ActionType.ADD_SLIDE,\r\n  ActionType.REMOVE_SLIDES,\r\n  ActionType.SET_SLIDE_BACKGROUND_IMAGE,\r\n  ActionType.SET_SLIDE_BACKGROUND_COLOR,\r\n  ActionType.ADD_TEXT,\r\n  ActionType.ADD_IMAGE,\r\n  ActionType.ADD_PRIMITIVE,\r\n];\r\n\r\ntype Action = {\r\n  type: ActionType;\r\n  payload?: any;\r\n}\r\n\r\nexport default Action;\r\n","import { Dispatch } from 'react';\r\nimport Action, { ActionType } from './actions';\r\nimport { UUID } from '../../model/uuid';\r\nimport { Dimensions, Position, Presentation, PrimitiveType } from '../../model/types';\r\n\r\nexport function openPresentation(presentation: Presentation) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.OPEN_PRESENTATION,\r\n      payload: presentation,\r\n    });\r\n  };\r\n}\r\n\r\nexport function newPresentation() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.NEW_PRESENTATION,\r\n    });\r\n  };\r\n}\r\n\r\nexport function changePresentationTitle(title: string) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.CHANGE_PRESENTATION_TITLE,\r\n      payload: title,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setTextValue(elementID: UUID, value: string) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SET_TEXT_VALUE,\r\n      payload: {\r\n        elementID,\r\n        value,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function setTextFont(elementID: UUID, font: string) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SET_TEXT_FONT,\r\n      payload: {\r\n        elementID,\r\n        font,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function setTextSize(elementID: UUID, size: number) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SET_TEXT_SIZE,\r\n      payload: {\r\n        elementID,\r\n        size,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function setTextColor(elementID: UUID, color: string) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SET_TEXT_COLOR,\r\n      payload: {\r\n        elementID,\r\n        color,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function setPrimitiveFillColor(elementID: UUID, fill: string) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SET_PRIMITIVE_FILL_COLOR,\r\n      payload: {\r\n        elementID,\r\n        fill,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function setPrimitiveStrokeColor(elementID: UUID, stroke: string) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SET_PRIMITIVE_STROKE_COLOR,\r\n      payload: {\r\n        elementID,\r\n        stroke,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function selectElement(elementID: UUID) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SELECT_ELEMENT,\r\n      payload: elementID,\r\n    });\r\n  };\r\n}\r\n\r\nexport function unselectElement(elementID: UUID) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.UNSELECT_ELEMENT,\r\n      payload: elementID,\r\n    });\r\n  };\r\n}\r\n\r\nexport function moveElements(positionDiff: Position) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.MOVE_ELEMENTS,\r\n      payload: positionDiff,\r\n    });\r\n  };\r\n}\r\n\r\nexport function resizeElement(elementID: UUID, dimensions: Dimensions) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.RESIZE_ELEMENT,\r\n      payload: {\r\n        elementID,\r\n        dimensions,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function removeElements() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.REMOVE_ELEMENTS,\r\n    });\r\n  };\r\n}\r\n\r\nexport function addSlide() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.ADD_SLIDE,\r\n    });\r\n  };\r\n}\r\n\r\nexport function removeSlides() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.REMOVE_SLIDES,\r\n    });\r\n  };\r\n}\r\n\r\nexport function nextSlide() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.NEXT_SLIDE,\r\n    });\r\n  };\r\n}\r\n\r\nexport function previousSlide() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.PREVIOUS_SLIDE,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setSlideBackgroundImage(src: string) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SET_SLIDE_BACKGROUND_IMAGE,\r\n      payload: src,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setSlideBackgroundColor(color: string) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SET_SLIDE_BACKGROUND_COLOR,\r\n      payload: color,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setCurrentSlide(slideID: UUID) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SET_CURRENT_SLIDE,\r\n      payload: slideID,\r\n    });\r\n  };\r\n}\r\n\r\nexport function selectSlide(slideID: UUID) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SELECT_SLIDE,\r\n      payload: slideID,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setFirstCurrentSlide() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.SET_FIRST_CURRENT_SLIDE,\r\n    });\r\n  };\r\n}\r\n\r\nexport function addText(position: Position, dimensions: Dimensions, value: string) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.ADD_TEXT,\r\n      payload: {\r\n        position,\r\n        dimensions,\r\n        value,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function addImage(position: Position, dimensions: Dimensions, src: string) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.ADD_IMAGE,\r\n      payload: {\r\n        position,\r\n        dimensions,\r\n        src,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function addPrimitive(position: Position, dimensions: Dimensions, primitiveType: PrimitiveType) {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.ADD_PRIMITIVE,\r\n      payload: {\r\n        position,\r\n        dimensions,\r\n        primitiveType,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nexport function undo() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.UNDO,\r\n    });\r\n  };\r\n}\r\n\r\nexport function redo() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.REDO,\r\n    });\r\n  };\r\n}\r\n\r\nexport function startDemonstration() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.START_DEMONSTRATION,\r\n    });\r\n  };\r\n}\r\n\r\nexport function stopDemonstration() {\r\n  return (dispatch: Dispatch<Action>): void => {\r\n    dispatch({\r\n      type: ActionType.STOP_DEMONSTRATION,\r\n    });\r\n  };\r\n}\r\n","import React, { useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../../../state';\r\nimport styles from './PresentationTitle.module.css';\r\nimport { RootState } from '../../../state/reducers';\r\n\r\ntype PresentationTitleProps = {\r\n  title: string;\r\n}\r\n\r\nfunction PresentationTitle({ title }: PresentationTitleProps): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const { changePresentationTitle } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const [editingValue, setEditingValue] = useState(title);\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => setEditingValue(event.currentTarget.value);\r\n\r\n  const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === 'Enter') {\r\n      event.currentTarget.blur();\r\n    }\r\n  };\r\n\r\n  const onBlur = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.currentTarget.value.trim() === '') {\r\n      setEditingValue(title);\r\n    } else {\r\n      changePresentationTitle(event.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  const onFocus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.currentTarget.select();\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      aria-label=\"Presentation Title\"\r\n      className={styles.title}\r\n      value={editingValue}\r\n      onChange={onChange}\r\n      onKeyDown={onKeyDown}\r\n      onBlur={onBlur}\r\n      onFocus={onFocus}\r\n    />\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState): PresentationTitleProps {\r\n  return {\r\n    title: state.presentation.title,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PresentationTitle);\r\n","export type DropdownMenuItemType = {\r\n  label: string;\r\n  items: MenuItem[];\r\n};\r\n\r\nexport type MenuItem = MenuButton | Submenu;\r\n\r\nexport enum MenuItemType {\r\n  MenuButton,\r\n  Submenu,\r\n}\r\n\r\nexport type MenuButton = {\r\n  type: MenuItemType.MenuButton;\r\n  label: string;\r\n  action: () => void;\r\n  icon?: string;\r\n};\r\n\r\nexport type Submenu = {\r\n  type: MenuItemType.Submenu;\r\n  label: string;\r\n  items: MenuButton[];\r\n  icon?: string;\r\n};\r\n","import React, { useState } from 'react';\r\nimport styles from './DropdownItem.module.css';\r\nimport { MenuItem, MenuItemType } from '../../RibbonTypes';\r\n\r\ntype DropdownItemProps = {\r\n  item: MenuItem;\r\n  onClick: () => void;\r\n};\r\n\r\n// TODO: split menu button and menu submenu\r\n//       think about terminology (dropdown, dropdownItem, nestedDropdown, nestedDropdownItem)\r\nfunction DropdownItem({ item, onClick }: DropdownItemProps): JSX.Element {\r\n  const [isNestedVisible, setIsNestedVisible] = useState(false);\r\n\r\n  return (\r\n    <li>\r\n      <a\r\n        href=\"#\"\r\n        className={styles.item}\r\n        onClick={event => {\r\n          event.preventDefault();\r\n          if (item.type === MenuItemType.MenuButton) {\r\n            item.action();\r\n            onClick();\r\n          } else {\r\n            setIsNestedVisible(!isNestedVisible);\r\n          }\r\n        }}\r\n      >\r\n        {item.label}\r\n        {\r\n          item.icon &&\r\n            <span className={'material-icons md-18 ' + styles.itemIcon}>{item.icon}</span>\r\n        }\r\n      </a>\r\n\r\n      {\r\n        item.type === MenuItemType.Submenu && isNestedVisible &&\r\n          <ul className={styles.nested}>\r\n            {item.items.map(subItem => (\r\n              <li key={subItem.label}>\r\n                <a\r\n                  href=\"#\"\r\n                  className={styles.subItem}\r\n                  onClick={event => {\r\n                    event.preventDefault();\r\n                    subItem.action();\r\n                    onClick();\r\n                  }}\r\n                >\r\n                  {subItem.label}\r\n                  {\r\n                    subItem.icon &&\r\n                      <span className={'material-icons md-18 ' + styles.subItemIcon}>{subItem.icon}</span>\r\n                  }\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n      }\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default DropdownItem;\r\n","import React from 'react';\r\nimport { MenuItem } from '../../RibbonTypes';\r\nimport styles from './Dropdown.module.css';\r\nimport DropdownItem from '../DropdownItem/DropdownItem';\r\n\r\ntype DropdownMenuItemProps = {\r\n  label: string;\r\n  items: MenuItem[];\r\n  onClick: () => void;\r\n  isVisible: boolean;\r\n};\r\n\r\nfunction Dropdown({ label, items, isVisible, onClick }: DropdownMenuItemProps): JSX.Element {\r\n  return (\r\n    <div className={styles.item}>\r\n      <a\r\n        className={styles.itemLabel}\r\n        href=\"#\"\r\n        onClick={event => {\r\n          event.preventDefault();\r\n          onClick();\r\n        }}\r\n      >\r\n        {label}\r\n      </a>\r\n\r\n      {\r\n        isVisible &&\r\n          <ul className={styles.dropdownList}>\r\n            {items.map(item => (\r\n              <DropdownItem key={item.label} item={item} onClick={onClick} />\r\n            ))}\r\n          </ul>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nfunction useEventListener<T extends DocumentAndElementEventHandlers>(\r\n  eventName: keyof WindowEventMap,\r\n  handler: (e: Event) => void,\r\n  ref?: React.RefObject<T>,\r\n): void {\r\n  const savedHandler = useRef<(e: Event) => void>();\r\n\r\n  useEffect(() => {\r\n    const targetElement: T | Window = ref?.current || window;\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return;\r\n    }\r\n\r\n    if (savedHandler.current !== handler) {\r\n      savedHandler.current = handler;\r\n    }\r\n\r\n    const eventListener = (e: Event) => {\r\n      if (savedHandler?.current) {\r\n        savedHandler.current(e);\r\n      }\r\n    };\r\n\r\n    targetElement.addEventListener(eventName, eventListener);\r\n\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, ref, handler]);\r\n}\r\n\r\nexport default useEventListener;\r\n","import React from 'react';\r\nimport useEventListener from '../useEventListener';\r\n\r\ntype Handler = (event: MouseEvent) => void;\r\n\r\nfunction useOnClickOutside<T extends SVGElement>(\r\n  ref: React.RefObject<T>,\r\n  handler: Handler,\r\n  includedElements?: React.RefObject<Node>[],\r\n  parent?: React.RefObject<DocumentAndElementEventHandlers>,\r\n): void {\r\n  useEventListener('mousedown', event => {\r\n    const element = ref?.current;\r\n\r\n    const containsIncluded = (el: React.RefObject<Node>) => {\r\n      return el?.current?.contains(event.target as Node);\r\n    };\r\n\r\n    if (!element || element.contains(event.target as Node)) {\r\n      return;\r\n    }\r\n    if (includedElements && includedElements.every(containsIncluded)) {\r\n      return;\r\n    }\r\n\r\n    handler(event as MouseEvent);\r\n  }, parent);\r\n}\r\n\r\nexport default useOnClickOutside;\r\n","import React, { useRef, useState } from 'react';\r\nimport { DropdownMenuItemType } from '../RibbonTypes';\r\nimport styles from './DropdownMenu.module.css';\r\nimport Dropdown from './Dropdown/Dropdown';\r\nimport useOnClickOutside from '../../../hooks/mouse/useOnClickOutside';\r\n\r\ntype DropdownMenuProps = {\r\n  menuItems: DropdownMenuItemType[];\r\n}\r\n\r\nfunction DropdownMenu({ menuItems }: DropdownMenuProps): JSX.Element {\r\n  const initialVisibility = new Array(menuItems.length).fill(false);\r\n  const [visibility, setVisibility] = useState(initialVisibility);\r\n\r\n  const ref = useRef(null);\r\n  useOnClickOutside(ref, () => {\r\n    setVisibility(new Array(menuItems.length).fill(false));\r\n  });\r\n\r\n  return (\r\n    <div className={styles.menu} ref={ref}>\r\n      {menuItems.map((menuItem, index) => (\r\n        <Dropdown\r\n          key={index}\r\n          label={menuItem.label}\r\n          items={menuItem.items}\r\n          isVisible={visibility[index]}\r\n          onClick={() => {\r\n            setVisibility(visibility.map((isVisible, i) => i === index ? !isVisible : false));\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropdownMenu;\r\n","import { UUID } from './uuid';\r\n\r\nexport type Position = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nexport type Dimensions = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\nexport enum ElementType {\r\n  TEXT,\r\n  IMAGE,\r\n  PRIMITIVE,\r\n}\r\n\r\nexport type SlideElement = TextElement | ImageElement | PrimitiveElement;\r\n\r\nexport type GenericSlideElement = {\r\n  id: UUID;\r\n  type: ElementType;\r\n  position: Position;\r\n  dimensions: Dimensions;\r\n};\r\n\r\nexport type TextElement = GenericSlideElement & {\r\n  type: ElementType.TEXT;\r\n  value: string;\r\n  size: number;\r\n  font: string;\r\n  color: string;\r\n};\r\n\r\nexport type ImageElement = GenericSlideElement & {\r\n  type: ElementType.IMAGE;\r\n  src: string;\r\n};\r\n\r\nexport enum PrimitiveType {\r\n  RECTANGLE,\r\n  ELLIPSE,\r\n  TRIANGLE,\r\n}\r\n\r\nexport type PrimitiveElement = GenericSlideElement & {\r\n  type: ElementType.PRIMITIVE;\r\n  primitiveType: PrimitiveType;\r\n  fill: string;\r\n  stroke: string;\r\n};\r\n\r\nexport enum BackgroundType {\r\n  SOLID,\r\n  IMAGE,\r\n}\r\n\r\nexport type Background = SolidBackground | ImageBackground;\r\n\r\nexport type SolidBackground = {\r\n  type: BackgroundType.SOLID;\r\n  color: string;\r\n};\r\n\r\nexport type ImageBackground = {\r\n  type: BackgroundType.IMAGE;\r\n  src: string;\r\n};\r\n\r\nexport type Slide = {\r\n  id: UUID;\r\n  background: Background;\r\n  elements: SlideElement[];\r\n};\r\n\r\nexport type Presentation = {\r\n  title: string;\r\n  slides: Slide[];\r\n};\r\n\r\nexport type Selections = {\r\n  selectedSlideIDs: UUID[];\r\n  selectedElementIDs: UUID[];\r\n};\r\n\r\nexport type HistoryState = {\r\n  presentation: Presentation;\r\n  selections: Selections;\r\n};\r\n\r\nexport type History = {\r\n  pastStates: HistoryState[];\r\n  futureStates: HistoryState[];\r\n};\r\n\r\nexport type Editor = {\r\n  presentation: Presentation;\r\n  selections: Selections;\r\n  history: History;\r\n  isDemonstrating: boolean;\r\n};\r\n","export type UUID = string;\r\n\r\nexport function generateUUID(): UUID {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    const r = (Math.random() * 16) | 0;\r\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n","import { Dimensions, Position } from './types';\r\n\r\n// Editor\r\nexport const MAX_HISTORY_ENTRIES = 50;\r\n\r\n// Presentation\r\n\r\nexport const DEFAULT_PRESENTATION_NAME = 'New Presentation';\r\n\r\n// Slides\r\n\r\nexport const SLIDE_WIDTH = 1920;\r\nexport const SLIDE_HEIGHT = 1080;\r\n\r\nexport const DEFAULT_SLIDE_BACKGROUND = '#ffffff';\r\n\r\n// Elements\r\n\r\nexport const DEFAULT_ELEMENT_POSITION: Position = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\nexport const DEFAULT_TEXT_DIMENSIONS: Dimensions = {\r\n  width: 0,\r\n  height: 0,\r\n};\r\nexport const DEFAULT_TEXT_FONT = 'Comic Sans MS';\r\nexport const DEFAULT_TEXT_COLOR = '#000000';\r\nexport const DEFAULT_TEXT_SIZE = 44;\r\n\r\nexport const DEFAULT_IMAGE_WIDTH = SLIDE_WIDTH / 2;\r\n\r\nexport const DEFAULT_PRIMITIVE_DIMENSIONS: Dimensions = {\r\n  width: 200,\r\n  height: 200,\r\n};\r\nexport const DEFAULT_PRIMITIVE_FILL = '#ffffff';\r\nexport const DEFAULT_PRIMITIVE_STROKE = '#000000';\r\n","import { BackgroundType, Editor, Presentation, Slide, SlideElement } from './types';\r\nimport { generateUUID, UUID } from './uuid';\r\nimport { DEFAULT_PRESENTATION_NAME, DEFAULT_SLIDE_BACKGROUND, MAX_HISTORY_ENTRIES } from './constants';\r\n\r\nexport function createNewSlide(): Slide {\r\n  return {\r\n    id: generateUUID(),\r\n    background: {\r\n      type: BackgroundType.SOLID,\r\n      color: DEFAULT_SLIDE_BACKGROUND,\r\n    },\r\n    elements: [],\r\n  };\r\n}\r\n\r\nexport function createNewPresentation(): Presentation {\r\n  return {\r\n    title: DEFAULT_PRESENTATION_NAME,\r\n    slides: [createNewSlide()],\r\n  };\r\n}\r\n\r\nexport function createEditor(presentation: Presentation): Editor {\r\n  return {\r\n    presentation,\r\n    selections: {\r\n      selectedSlideIDs: presentation.slides.length > 0 ? [presentation.slides[0].id] : [],\r\n      selectedElementIDs: [],\r\n    },\r\n    history: {\r\n      pastStates: [],\r\n      futureStates: [],\r\n    },\r\n    isDemonstrating: false,\r\n  };\r\n}\r\n\r\nexport function concatWithSelectedSlideElements(\r\n  editor: Editor,\r\n  element: SlideElement,\r\n): Slide[] {\r\n  return editor.presentation.slides.map(slide =>\r\n    isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n      ? {\r\n        ...slide,\r\n        elements: slide.elements.concat(element),\r\n      }\r\n      : { ...slide },\r\n  );\r\n}\r\n\r\nexport function isCurrentSlide(\r\n  slide: Slide,\r\n  selectedSlideIDs: UUID[],\r\n): boolean {\r\n  return slide.id === selectedSlideIDs[0];\r\n}\r\n\r\nexport function isCurrentElement(\r\n  element: SlideElement,\r\n  selectedElementIDs: UUID[],\r\n): boolean {\r\n  return element.id === selectedElementIDs[0];\r\n}\r\n\r\nexport function selectNearestUnselectedSlide(editor: Editor): UUID[] {\r\n  const firstSelectedSlideIndex = editor.presentation.slides.findIndex(slide => isCurrentSlide(slide, editor.selections.selectedSlideIDs));\r\n\r\n  if (firstSelectedSlideIndex > 0) {\r\n    return [editor.presentation.slides[firstSelectedSlideIndex - 1].id];\r\n  }\r\n\r\n  const newSlides = editor.presentation.slides.filter(slide => !editor.selections.selectedSlideIDs.includes(slide.id));\r\n\r\n  if (newSlides.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  return [newSlides[0].id];\r\n}\r\n\r\nexport function moveElementOnTop(elements: SlideElement[], elementID: UUID): SlideElement[] {\r\n  elements.map((element, i) => {\r\n    if (element.id === elementID) {\r\n      elements.splice(i, 1);\r\n      elements.push(element);\r\n    }\r\n  });\r\n\r\n  return elements;\r\n}\r\n\r\nexport function getCurrentSlideIndex(editor: Editor): number {\r\n  return editor.presentation.slides.reduce(\r\n    (savedIndex, slide, index) => isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n      ? index\r\n      : savedIndex,\r\n    -1,\r\n  );\r\n}\r\n\r\nexport function saveState(editor: Editor, newEditor: Editor): Editor {\r\n  if (editor !== newEditor) {\r\n    const historyState = {\r\n      presentation: editor.presentation,\r\n      selections: editor.selections,\r\n    };\r\n\r\n    return {\r\n      ...newEditor,\r\n      history: {\r\n        pastStates: newEditor.history.pastStates.length < MAX_HISTORY_ENTRIES\r\n          ? [...newEditor.history.pastStates, historyState]\r\n          : [...newEditor.history.pastStates.slice(1), historyState],\r\n        futureStates: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  return newEditor;\r\n}\r\n","import React from 'react';\r\nimport styles from './PrimitivePropertiesPanel.module.css';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../../../../state';\r\nimport { ElementType, PrimitiveElement } from '../../../../model/types';\r\nimport { RootState } from '../../../../state/reducers';\r\nimport { isCurrentElement, isCurrentSlide } from '../../../../model/modelUtils';\r\n\r\ntype PrimitivePropertiesPanelProps = {\r\n  currentElement?: PrimitiveElement;\r\n};\r\n\r\nfunction PrimitivePropertiesPanel({ currentElement }: PrimitivePropertiesPanelProps): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const { setPrimitiveFillColor, setPrimitiveStrokeColor } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const onFillColorChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (currentElement) {\r\n      setPrimitiveFillColor(currentElement.id, event.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  const onStrokeColorChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (currentElement) {\r\n      setPrimitiveStrokeColor(currentElement.id, event.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul className={styles.primitivePropertiesPanel}>\r\n      <li className={styles.panelElement}>\r\n        Fill\r\n        <input\r\n          type=\"color\"\r\n          defaultValue={currentElement?.fill}\r\n          onInput={onFillColorChange}\r\n        />\r\n      </li>\r\n\r\n      <li className={styles.panelElement}>\r\n        Stroke\r\n        <input\r\n          type=\"color\"\r\n          defaultValue={currentElement?.stroke}\r\n          onInput={onStrokeColorChange}\r\n        />\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState): PrimitivePropertiesPanelProps {\r\n  for (const slide of state.presentation.slides) {\r\n    if (isCurrentSlide(slide, state.selections.selectedSlideIDs)) {\r\n      for (const element of slide.elements) {\r\n        if (isCurrentElement(element, state.selections.selectedElementIDs) && element.type === ElementType.PRIMITIVE) {\r\n          return {\r\n            currentElement: element,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    currentElement: undefined,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrimitivePropertiesPanel);\r\n","import React from 'react';\r\nimport styles from './TextPropertiesPanel.module.css';\r\nimport { getTextProperties } from '../../../../model/uiParameters/textProperties';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../../../../state';\r\nimport { bindActionCreators } from 'redux';\r\nimport { RootState } from '../../../../state/reducers';\r\nimport { isCurrentElement, isCurrentSlide } from '../../../../model/modelUtils';\r\nimport { ElementType, TextElement } from '../../../../model/types';\r\n\r\ntype TextPropertiesPanelProps = {\r\n  currentElement?: TextElement;\r\n};\r\n\r\nfunction TextPropertiesPanel({ currentElement }: TextPropertiesPanelProps): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const { setTextFont, setTextSize, setTextColor } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const textProps = getTextProperties();\r\n\r\n  const onFontChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (currentElement) {\r\n      setTextFont(currentElement.id, event.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  const onSizeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (currentElement) {\r\n      const size = parseInt(event.currentTarget.value);\r\n      setTextSize(currentElement.id, size);\r\n    }\r\n  };\r\n\r\n  const onColorChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (currentElement) {\r\n      setTextColor(currentElement.id, event.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul className={styles.textPropertiesPanel}>\r\n      <li className={styles.panelElement}>\r\n        <select\r\n          name=\"font\"\r\n          className={styles.fontSelection}\r\n          value={currentElement?.font}\r\n          onChange={onFontChange}\r\n        >\r\n          {textProps.fonts.map(fontOption => (\r\n            <option\r\n              key={fontOption}\r\n              value={fontOption}\r\n            >\r\n              {fontOption}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </li>\r\n\r\n      <li className={styles.panelElement}>\r\n        <select\r\n          name=\"size\"\r\n          className={styles.sizeSelection}\r\n          value={currentElement?.size}\r\n          onChange={onSizeChange}\r\n        >\r\n          {textProps.sizes.map(sizeValue => (\r\n            <option\r\n              key={sizeValue}\r\n              value={sizeValue}\r\n            >\r\n              {sizeValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </li>\r\n\r\n      <li className={styles.panelElement}>\r\n        Color\r\n        <input\r\n          type=\"color\"\r\n          defaultValue={currentElement?.color}\r\n          onInput={onColorChange}\r\n        />\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState): TextPropertiesPanelProps {\r\n  for (const slide of state.presentation.slides) {\r\n    if (isCurrentSlide(slide, state.selections.selectedSlideIDs)) {\r\n      for (const element of slide.elements) {\r\n        if (isCurrentElement(element, state.selections.selectedElementIDs) && element.type === ElementType.TEXT) {\r\n          return {\r\n            currentElement: element,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    currentElement: undefined,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TextPropertiesPanel);\r\n","import { TextProperties } from '../../components/Ribbon/PropertiesPanel/TextPropertiesPanel/TextPropertiesPanelTypes';\r\n\r\nexport function getTextProperties(): TextProperties {\r\n  return {\r\n    fonts: [\r\n      'Arial',\r\n      'Verdana',\r\n      'Comic Sans MS',\r\n      'Consolas',\r\n      'Calibri',\r\n    ],\r\n    sizes: [\r\n      13,\r\n      15,\r\n      17,\r\n      19,\r\n      22,\r\n      24,\r\n      27,\r\n      31,\r\n      34,\r\n      39,\r\n      44,\r\n      49,\r\n      55,\r\n      62,\r\n      70,\r\n    ],\r\n  };\r\n}\r\n","import React from 'react';\r\nimport styles from './PropertiesPanel.module.css';\r\nimport { RootState } from '../../../state/reducers';\r\nimport { ElementType } from '../../../model/types';\r\nimport { isCurrentSlide } from '../../../model/modelUtils';\r\nimport { connect } from 'react-redux';\r\nimport PrimitivePropertiesPanel from './PrimitivePropertiesPanel/PrimitivePropertiesPanel';\r\nimport TextPropertiesPanel from './TextPropertiesPanel/TextPropertiesPanel';\r\n\r\ntype PropertiesPanelProps = {\r\n  selectedElementType?: ElementType;\r\n};\r\n\r\n\r\nfunction PropertiesPanel({ selectedElementType }: PropertiesPanelProps): JSX.Element {\r\n  return (\r\n    <div className={styles.propsPanel}>\r\n      {(() => {\r\n        if (selectedElementType !== undefined) {\r\n          switch (selectedElementType) {\r\n          case ElementType.PRIMITIVE:\r\n            return <PrimitivePropertiesPanel />;\r\n          case ElementType.TEXT:\r\n            return <TextPropertiesPanel />;\r\n          case ElementType.IMAGE:\r\n            break;\r\n          }\r\n        }\r\n\r\n        return '';\r\n      })()}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState): PropertiesPanelProps {\r\n  if (state.selections.selectedElementIDs.length === 1) {\r\n    for (const slide of state.presentation.slides) {\r\n      if (isCurrentSlide(slide, state.selections.selectedSlideIDs)) {\r\n        for (const element of slide.elements) {\r\n          if (element.id === state.selections.selectedElementIDs[0]) {\r\n            return {\r\n              selectedElementType: element.type,\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    selectedElementType: undefined,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PropertiesPanel);\r\n","import React from 'react';\r\nimport styles from './Ribbon.module.css';\r\nimport PresentationTitle from './PresentationTitle/PresentationTitle';\r\nimport DropdownMenu from './DropdownMenu/DropdownMenu';\r\nimport { DropdownMenuItemType } from './RibbonTypes';\r\nimport PropertiesPanel from './PropertiesPanel/PropertiesPanel';\r\n\r\ntype RibbonProps = {\r\n  menuItems: DropdownMenuItemType[];\r\n};\r\n\r\nfunction Ribbon({ menuItems }: RibbonProps): JSX.Element {\r\n  return (\r\n    <div className={styles.ribbon}>\r\n      <PresentationTitle />\r\n      <DropdownMenu menuItems={menuItems} />\r\n      <PropertiesPanel />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ribbon;\r\n","import React from 'react';\r\nimport { TextElement } from '../../../../../model/types';\r\n\r\ntype TextElementViewProps = {\r\n  element: TextElement;\r\n}\r\n\r\nfunction TextElementView({ element }: TextElementViewProps): JSX.Element {\r\n  return (\r\n    <text\r\n      x={element.position.x}\r\n      y={element.position.y}\r\n      fill={element.color}\r\n      dominantBaseline=\"hanging\"\r\n      textAnchor=\"left\"\r\n      style={{\r\n        fontFamily: element.font,\r\n        fontSize: element.size,\r\n        width: element.dimensions.width,\r\n        height: element.dimensions.height,\r\n      }}\r\n    >\r\n      {element.value}\r\n    </text>\r\n  );\r\n}\r\n\r\nexport default TextElementView;\r\n","import React from 'react';\r\nimport { ImageElement } from '../../../../../model/types';\r\n\r\ntype ImageElementViewProps = {\r\n  element: ImageElement;\r\n}\r\n\r\nfunction ImageElementView({ element }: ImageElementViewProps): JSX.Element {\r\n  return (\r\n    <image\r\n      href={element.src}\r\n      x={element.position.x}\r\n      y={element.position.y}\r\n      width={element.dimensions.width}\r\n      height={element.dimensions.height}\r\n      preserveAspectRatio=\"none\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ImageElementView;\r\n","import React from 'react';\r\nimport { PrimitiveElement } from '../../../../../model/types';\r\n\r\ntype RectanglePrimitiveProps = {\r\n  element: PrimitiveElement;\r\n}\r\n\r\nfunction RectanglePrimitive({ element }: RectanglePrimitiveProps): JSX.Element {\r\n  return (\r\n    <rect\r\n      x={element.position.x}\r\n      y={element.position.y}\r\n      width={element.dimensions.width}\r\n      height={element.dimensions.height}\r\n      fill={element.fill}\r\n      stroke={element.stroke}\r\n    />\r\n  );\r\n}\r\n\r\nexport default RectanglePrimitive;\r\n","import { BackgroundType, Dimensions, Position, PrimitiveElement, Slide, SlideElement } from '../model/types';\r\n\r\nexport function getSlideBackgroundStyle(slide: Slide) {\r\n  return slide.background.type == BackgroundType.SOLID\r\n    ? {\r\n      backgroundColor: slide.background.color,\r\n    }\r\n    : {\r\n      backgroundImage: `url(${slide.background.src})`,\r\n    };\r\n}\r\n\r\nexport function calculateEllipseProperties(element: PrimitiveElement) {\r\n  return {\r\n    cx: element.position.x + element.dimensions.width / 2,\r\n    cy: element.position.y + element.dimensions.height / 2,\r\n    rx: element.dimensions.width / 2 - 1,\r\n    ry: element.dimensions.height / 2 - 1,\r\n  };\r\n}\r\n\r\nexport function getTrianglePoints(element: PrimitiveElement): string {\r\n  const firstPoint = `${element.position.x},${element.position.y + element.dimensions.height}`;\r\n  const secondPoint = `${element.position.x + element.dimensions.width / 2},${element.position.y}`;\r\n  const thirdPoint = `${element.position.x + element.dimensions.width},${element.position.y + element.dimensions.height}`;\r\n  return `${firstPoint} ${secondPoint} ${thirdPoint}`;\r\n}\r\n\r\nexport function getResizeAnchorProperties(element: SlideElement): Position & Dimensions {\r\n  return {\r\n    x: element.position.x + element.dimensions.width - 5,\r\n    y: element.position.y + element.dimensions.height - 5,\r\n    width: 10,\r\n    height: 10,\r\n  };\r\n}\r\n\r\nexport function getResizeAnchorTranslateDelta(\r\n  element: SlideElement,\r\n  delta: Position,\r\n  dimensions: Dimensions,\r\n): Position {\r\n  return delta.x === 0 && delta.y === 0\r\n    ? {\r\n      x: dimensions.width - element.dimensions.width,\r\n      y: dimensions.height - element.dimensions.height,\r\n    }\r\n    : delta;\r\n}\r\n","import React from 'react';\r\nimport { PrimitiveElement } from '../../../../../model/types';\r\nimport { calculateEllipseProperties } from '../../../../../common/componentsUtils';\r\n\r\ntype EllipsePrimitiveProps = {\r\n  element: PrimitiveElement;\r\n}\r\n\r\nfunction EllipsePrimitive({ element }: EllipsePrimitiveProps): JSX.Element {\r\n  const properties = calculateEllipseProperties(element);\r\n\r\n  return (\r\n    <ellipse\r\n      cx={properties.cx}\r\n      cy={properties.cy}\r\n      rx={properties.rx}\r\n      ry={properties.ry}\r\n      fill={element.fill}\r\n      stroke={element.stroke}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EllipsePrimitive;\r\n","import React from 'react';\r\nimport { PrimitiveElement } from '../../../../../model/types';\r\nimport { getTrianglePoints } from '../../../../../common/componentsUtils';\r\n\r\ntype TrianglePrimitiveProps = {\r\n  element: PrimitiveElement;\r\n}\r\n\r\nfunction TrianglePrimitive({ element }: TrianglePrimitiveProps): JSX.Element {\r\n  return (\r\n    <polygon\r\n      points={getTrianglePoints(element)}\r\n      fill={element.fill}\r\n      stroke={element.stroke}\r\n    />\r\n  );\r\n}\r\n\r\nexport default TrianglePrimitive;\r\n","import React from 'react';\r\nimport { PrimitiveElement, PrimitiveType } from '../../../../../model/types';\r\nimport RectanglePrimitive from './RectanglePrimitive';\r\nimport EllipsePrimitive from './EllipsePrimitive';\r\nimport TrianglePrimitive from './TrianglePrimitive';\r\n\r\ntype PrimitiveElementViewProps = {\r\n  element: PrimitiveElement;\r\n}\r\n\r\nfunction PrimitiveElementView({ element }: PrimitiveElementViewProps): JSX.Element {\r\n  switch (element.primitiveType) {\r\n  case PrimitiveType.RECTANGLE:\r\n    return <RectanglePrimitive element={element} />;\r\n  case PrimitiveType.TRIANGLE:\r\n    return <TrianglePrimitive element={element} />;\r\n  case PrimitiveType.ELLIPSE:\r\n    return <EllipsePrimitive element={element} />;\r\n  }\r\n}\r\n\r\nexport default PrimitiveElementView;\r\n","import React from 'react';\r\nimport { ElementType, Slide } from '../../../model/types';\r\nimport TextElementView from './Elements/TextElementView/TextElementView';\r\nimport ImageElementView from './Elements/ImageElementView/ImageElementView';\r\nimport PrimitiveElementView from './Elements/PrimitiveElementView/PrimitiveElementView';\r\nimport styles from './SlideView.module.css';\r\nimport { getSlideBackgroundStyle } from '../../../common/componentsUtils';\r\nimport { SLIDE_HEIGHT, SLIDE_WIDTH } from '../../../model/constants';\r\n\r\ntype SlideViewProps = {\r\n  slide: Slide;\r\n}\r\n\r\nfunction SlideView({ slide }: SlideViewProps): JSX.Element {\r\n  const slideBackgroundStyle = getSlideBackgroundStyle(slide);\r\n\r\n  return (\r\n    <svg\r\n      viewBox={`0 0 ${SLIDE_WIDTH} ${SLIDE_HEIGHT}`}\r\n      className={styles.slideview}\r\n      style={slideBackgroundStyle}\r\n    >\r\n      {slide.elements.map(element => {\r\n        switch (element.type) {\r\n        case ElementType.TEXT:\r\n          return <TextElementView key={element.id} element={element} />;\r\n        case ElementType.IMAGE:\r\n          return <ImageElementView key={element.id} element={element} />;\r\n        case ElementType.PRIMITIVE:\r\n          return <PrimitiveElementView key={element.id} element={element} />;\r\n        }\r\n      })}\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SlideView;\r\n","import React from 'react';\r\nimport '../SlideView/SlideView';\r\nimport { Slide } from '../../../model/types';\r\nimport styles from './SlideThumbnail.module.css';\r\nimport SlideView from '../SlideView/SlideView';\r\nimport { createNewSlide } from '../../../model/modelUtils';\r\n\r\ntype SlideThumbnailProps = {\r\n  slide: Slide;\r\n  index: number;\r\n  isSelected: boolean;\r\n  onClick?: (event: React.MouseEvent) => void;\r\n};\r\n\r\nfunction SlideThumbnail({ slide, index, isSelected, onClick }: SlideThumbnailProps): JSX.Element {\r\n  const displayedSlide = slide || createNewSlide();\r\n\r\n  return (\r\n    <div\r\n      className={styles.slidethumbnail}\r\n      onClick={(event) => {\r\n        if (onClick) {\r\n          onClick(event);\r\n        }\r\n      }}\r\n      style={isSelected ? {\r\n        border: '2px solid blue',\r\n      } : {}}\r\n    >\r\n      <span className={styles.slideindex}>{index}</span>\r\n      <div className={styles.slideview}>\r\n        <SlideView slide={displayedSlide} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SlideThumbnail;\r\n","import useEventListener from '../useEventListener';\r\nimport Handler from './handler';\r\nimport React from 'react';\r\n\r\nfunction useHotkey(\r\n  key: string,\r\n  handler: Handler,\r\n  ref?: React.RefObject<DocumentAndElementEventHandlers>,\r\n): void {\r\n  useEventListener('keydown', (e: Event) => {\r\n    const event = e as KeyboardEvent;\r\n\r\n    if (event.key === key) {\r\n      event.preventDefault();\r\n      handler(event);\r\n    }\r\n  }, ref);\r\n}\r\n\r\nexport default useHotkey;\r\n","import React, { useRef } from 'react';\r\nimport styles from './SlidePanel.module.css';\r\nimport { UUID } from '../../model/uuid';\r\nimport { Slide } from '../../model/types';\r\nimport SlideThumbnail from './SlideThumbnail/SlideThumbnail';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../../state';\r\nimport { RootState } from '../../state/reducers';\r\nimport useHotkey from '../../hooks/hotkeys/useHotkey';\r\n\r\ntype SlidePanelProps = {\r\n  slides: Slide[];\r\n  selectedSlideIDs: UUID[];\r\n}\r\n\r\nfunction SlidePanel({ slides, selectedSlideIDs }: SlidePanelProps): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const { setCurrentSlide, selectSlide, removeSlides } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const ref = useRef(null);\r\n  useHotkey('Delete', () => {\r\n    removeSlides();\r\n  }, ref);\r\n\r\n  return (\r\n    <div\r\n      className={styles.slidepanel}\r\n      ref={ref}\r\n      tabIndex={1}\r\n    >\r\n      {slides.map((slide, i) => (\r\n        <SlideThumbnail\r\n          key={slide.id}\r\n          slide={slide}\r\n          index={i + 1}\r\n          isSelected={selectedSlideIDs.includes(slide.id)}\r\n          onClick={event => {\r\n            if (event.ctrlKey) {\r\n              selectSlide(slide.id);\r\n            } else {\r\n              setCurrentSlide(slide.id);\r\n            }\r\n          }}\r\n        />\r\n      ))}\r\n    </div>);\r\n}\r\n\r\nfunction mapStateToProps(state: RootState): SlidePanelProps {\r\n  return {\r\n    slides: state.presentation.slides,\r\n    selectedSlideIDs: state.selections.selectedSlideIDs,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SlidePanel);\r\n","import { useEffect } from 'react';\r\n\r\nfunction useConfirmLeaving(): void {\r\n  const handleBeforeUnload = (e: Event) => {\r\n    e.preventDefault();\r\n    return e.returnValue = Boolean('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  });\r\n}\r\n\r\nexport default useConfirmLeaving;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\ntype DragAndDropHandler = (event: MouseEvent) => void;\r\n\r\nfunction useDragAndDrop<T extends EventTarget>(\r\n  ref: React.RefObject<T> | null,\r\n  onStart?: DragAndDropHandler,\r\n  onMove?: DragAndDropHandler,\r\n  onFinish?: DragAndDropHandler,\r\n): void {\r\n  const savedOnFinish = useRef<DragAndDropHandler>();\r\n\r\n  const onMouseDown = (e: Event) => {\r\n    const event = e as MouseEvent;\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    if (onStart) {\r\n      onStart(event);\r\n    }\r\n\r\n    addEventListener('mousemove', onMouseMove);\r\n    addEventListener('mouseup', onMouseUp);\r\n  };\r\n\r\n  const onMouseMove = (event: MouseEvent) => {\r\n    if (onMove) {\r\n      onMove(event);\r\n    }\r\n  };\r\n\r\n  const onMouseUp = (event: MouseEvent) => {\r\n    if (savedOnFinish.current) {\r\n      savedOnFinish.current(event);\r\n    }\r\n\r\n    removeEventListener('mousemove', onMouseMove);\r\n    removeEventListener('mouseup', onMouseUp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (savedOnFinish.current !== onFinish) {\r\n      savedOnFinish.current = onFinish;\r\n    }\r\n\r\n    if (ref?.current) {\r\n      ref.current.addEventListener('mousedown', onMouseDown);\r\n    }\r\n\r\n    return () => {\r\n      if (ref?.current) {\r\n        ref.current.removeEventListener('mousedown', onMouseDown);\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nexport default useDragAndDrop;\r\n","import React, { Dispatch } from 'react';\r\nimport { Position, SlideElement } from '../../model/types';\r\nimport useDragAndDrop from './useDragAndDrop';\r\nimport Action from '../../state/actions/actions';\r\n\r\nfunction useElementDragAndDrop<T extends SVGElement>(\r\n  ref: React.RefObject<T> | null,\r\n  element: SlideElement,\r\n  scaleFactor: number,\r\n  delta: Position,\r\n  setDelta: (position: Position) => void,\r\n  moveElements: (positionDiff: Position) => (dispatch: Dispatch<Action>) => void,\r\n): void {\r\n  let startPos: Position;\r\n\r\n  const onStart = (event: MouseEvent) => {\r\n    startPos = {\r\n      x: event.pageX,\r\n      y: event.pageY,\r\n    };\r\n  };\r\n\r\n  const onMove = (event: MouseEvent) => {\r\n    setDelta({\r\n      x: scaleFactor * (event.pageX - startPos.x),\r\n      y: scaleFactor * (event.pageY - startPos.y),\r\n    });\r\n  };\r\n\r\n  const onFinish = () => {\r\n    if (delta.x !== 0 && delta.y !== 0) {\r\n      moveElements(delta);\r\n    }\r\n    setDelta({ x: 0, y: 0 });\r\n  };\r\n\r\n  useDragAndDrop(ref, onStart, onMove, onFinish);\r\n}\r\n\r\nexport default useElementDragAndDrop;\r\n","import React from 'react';\r\nimport useEventListener from './useEventListener';\r\nimport useOnClickOutside from './mouse/useOnClickOutside';\r\nimport {\r\n  selectElement as selectElementCreator,\r\n  unselectElement as unselectElementCreator,\r\n} from '../state/actions/actionCreators';\r\nimport { SlideElement } from '../model/types';\r\n\r\nfunction useSlideElementActions<T extends SVGElement>(\r\n  ref: React.RefObject<T>,\r\n  element: SlideElement,\r\n  isSelected: boolean,\r\n  selectElement: typeof selectElementCreator,\r\n  unselectElement: typeof unselectElementCreator,\r\n  containerRef: React.RefObject<DocumentAndElementEventHandlers>,\r\n  resizeAnchorRef?: React.RefObject<T>,\r\n): void {\r\n  useEventListener('mousedown', () => {\r\n    if (!isSelected) {\r\n      selectElement(element.id);\r\n    }\r\n  }, ref);\r\n\r\n  useOnClickOutside(ref, event => {\r\n    if (isSelected && !event.ctrlKey) {\r\n      unselectElement(element.id);\r\n    }\r\n  }, resizeAnchorRef ? [resizeAnchorRef] : undefined, containerRef);\r\n}\r\n\r\nexport default useSlideElementActions;\r\n","import React, { useState } from 'react';\r\nimport { Dimensions, Position, SlideElement } from '../model/types';\r\nimport useDragAndDrop from './dragAndDrop/useDragAndDrop';\r\nimport { actionCreators } from '../state';\r\n\r\nfunction useSlideElementResize(\r\n  ref: React.RefObject<SVGRectElement>,\r\n  element: SlideElement,\r\n  scaleFactor: number,\r\n  resizeElement: typeof actionCreators.resizeElement,\r\n): Dimensions {\r\n  const [dimensions, setDimensions] = useState(element.dimensions);\r\n  let startPos: Position;\r\n\r\n  const onStart = (event: MouseEvent) => {\r\n    startPos = {\r\n      x: event.pageX,\r\n      y: event.pageY,\r\n    };\r\n  };\r\n\r\n  const onMove = (event: MouseEvent) => {\r\n    const delta = {\r\n      width: scaleFactor * (event.pageX - startPos.x),\r\n      height: scaleFactor * (event.pageY - startPos.y),\r\n    };\r\n\r\n    setDimensions({\r\n      width: dimensions.width + delta.width,\r\n      height: dimensions.height + delta.height,\r\n    });\r\n  };\r\n\r\n  const onFinish = () => {\r\n    resizeElement(element.id, {\r\n      width: dimensions.width,\r\n      height: dimensions.height,\r\n    });\r\n  };\r\n\r\n  useDragAndDrop(ref, onStart, onMove, onFinish);\r\n\r\n  return dimensions;\r\n}\r\n\r\nexport default useSlideElementResize;\r\n","import React, { useRef } from 'react';\r\nimport { ImageElement, Position } from '../../../../../model/types';\r\nimport { bindActionCreators } from 'redux';\r\nimport styles from '../EditableElement.module.css';\r\nimport { actionCreators } from '../../../../../state';\r\nimport { useDispatch } from 'react-redux';\r\nimport useSlideElementDragAndDrop from '../../../../../hooks/dragAndDrop/useSlideElementDragAndDrop';\r\nimport useSlideElementActions from '../../../../../hooks/useSlideElementActions';\r\nimport useSlideElementResize from '../../../../../hooks/useSlideElementResize';\r\nimport { getResizeAnchorProperties, getResizeAnchorTranslateDelta } from '../../../../../common/componentsUtils';\r\n\r\ntype EditableImageElementProps = {\r\n  element: ImageElement;\r\n  scaleFactor: number;\r\n  delta: Position;\r\n  setDelta: (position: Position) => void;\r\n  isSelected: boolean;\r\n  parentRef: React.RefObject<DocumentAndElementEventHandlers>;\r\n}\r\n\r\nfunction EditableImageElement(\r\n  {\r\n    element,\r\n    scaleFactor,\r\n    delta,\r\n    setDelta,\r\n    isSelected,\r\n    parentRef,\r\n  }: EditableImageElementProps,\r\n): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const { selectElement, unselectElement, moveElements, resizeElement } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const resizeAnchorRef = useRef(null);\r\n  const dimensions = useSlideElementResize(resizeAnchorRef, element, scaleFactor, resizeElement);\r\n\r\n  const ref = useRef(null);\r\n  useSlideElementActions(ref, element, isSelected, selectElement, unselectElement, parentRef, resizeAnchorRef);\r\n  useSlideElementDragAndDrop(ref, element, scaleFactor, delta, setDelta, moveElements);\r\n\r\n  const resizeAnchorDelta = getResizeAnchorTranslateDelta(element, delta, dimensions);\r\n\r\n  return (\r\n    <>\r\n      <image\r\n        href={element.src}\r\n        x={element.position.x}\r\n        y={element.position.y}\r\n        width={dimensions.width}\r\n        height={dimensions.height}\r\n        preserveAspectRatio=\"none\"\r\n        onDragStart={e => e.preventDefault()}\r\n        style={{ transform: isSelected ? `translate(${delta.x}px, ${delta.y}px)` : undefined }}\r\n        ref={isSelected ? undefined : ref}\r\n      />\r\n      {\r\n        isSelected &&\r\n          <rect\r\n              x={element.position.x}\r\n              y={element.position.y}\r\n              width={dimensions.width}\r\n              height={dimensions.height}\r\n              fill=\"#2a8ec8\"\r\n              stroke=\"#1563c8\"\r\n              fillOpacity=\"0.3\"\r\n              strokeOpacity=\"0.3\"\r\n              style={{ transform: `translate(${delta.x}px, ${delta.y}px)` }}\r\n              ref={isSelected ? ref : undefined}\r\n          />\r\n      }\r\n      {\r\n        isSelected &&\r\n          <rect\r\n              ref={resizeAnchorRef}\r\n              {...getResizeAnchorProperties(element)}\r\n              className={styles.resizeAnchor}\r\n              style={{ transform: `translate(${resizeAnchorDelta.x}px, ${resizeAnchorDelta.y}px)` }}\r\n          />\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditableImageElement;\r\n","import { RefObject, useState } from 'react';\r\nimport useEventListener from '../useEventListener';\r\n\r\ntype Handler = (event: Event) => void;\r\n\r\nfunction useDoubleClick<T extends DocumentAndElementEventHandlers>(\r\n  ref: RefObject<T>,\r\n  onDoubleClick: Handler,\r\n  latency = 300,\r\n): void {\r\n  const [clickCount, setClickCount] = useState(0);\r\n\r\n  const handleClick = (event: Event) => {\r\n    setClickCount(clickCount + 1);\r\n\r\n    setTimeout(() => {\r\n      if (clickCount === 2) {\r\n        onDoubleClick(event);\r\n        setClickCount(0);\r\n      }\r\n    }, latency);\r\n  };\r\n\r\n  useEventListener('click', handleClick, ref);\r\n}\r\n\r\nexport default useDoubleClick;\r\n","import React, { useRef } from 'react';\r\nimport { Position, TextElement } from '../../../../../model/types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../../../../../state';\r\nimport { bindActionCreators } from 'redux';\r\nimport useElementDragAndDrop from '../../../../../hooks/dragAndDrop/useSlideElementDragAndDrop';\r\nimport useDoubleClick from '../../../../../hooks/mouse/useDoubleClick';\r\nimport useSlideElementActions from '../../../../../hooks/useSlideElementActions';\r\n\r\ntype EditableTextElementProps = {\r\n  element: TextElement;\r\n  scaleFactor: number;\r\n  delta: Position;\r\n  setDelta: (position: Position) => void;\r\n  isSelected: boolean;\r\n  parentRef: React.RefObject<DocumentAndElementEventHandlers>;\r\n}\r\n\r\nfunction EditableTextElement(\r\n  {\r\n    element,\r\n    scaleFactor,\r\n    delta,\r\n    setDelta,\r\n    isSelected,\r\n    parentRef,\r\n  }: EditableTextElementProps,\r\n): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    selectElement,\r\n    unselectElement,\r\n    moveElements,\r\n    setTextValue,\r\n    removeElements,\r\n  } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const ref = useRef(null);\r\n\r\n  useSlideElementActions(ref, element, isSelected, selectElement, unselectElement, parentRef);\r\n  useElementDragAndDrop(ref, element, scaleFactor, delta, setDelta, moveElements);\r\n\r\n  useDoubleClick(ref, () => {\r\n    const newValue = prompt('Enter new value', element.value);\r\n    if (newValue !== null) {\r\n      if (newValue === '') {\r\n        removeElements();\r\n      }\r\n\r\n      setTextValue(element.id, newValue);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <text\r\n      x={element.position.x}\r\n      y={element.position.y}\r\n      fill={element.color}\r\n      dominantBaseline=\"hanging\"\r\n      textAnchor=\"left\"\r\n      style={{\r\n        fontFamily: element.font,\r\n        fontSize: element.size,\r\n        width: element.dimensions.width,\r\n        height: element.dimensions.height,\r\n        userSelect: 'none',\r\n        transform: isSelected ? `translate(${delta.x}px, ${delta.y}px)` : undefined,\r\n      }}\r\n      ref={ref}\r\n    >\r\n      {element.value}\r\n    </text>\r\n  );\r\n}\r\n\r\nexport default EditableTextElement;\r\n","import React, { useRef } from 'react';\r\nimport { Position, PrimitiveElement, PrimitiveType } from '../../../../../model/types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport useElementDragAndDrop from '../../../../../hooks/dragAndDrop/useSlideElementDragAndDrop';\r\nimport { actionCreators } from '../../../../../state';\r\nimport {\r\n  calculateEllipseProperties,\r\n  getResizeAnchorProperties,\r\n  getResizeAnchorTranslateDelta,\r\n  getTrianglePoints,\r\n} from '../../../../../common/componentsUtils';\r\nimport useSlideElementActions from '../../../../../hooks/useSlideElementActions';\r\nimport useSlideElementResize from '../../../../../hooks/useSlideElementResize';\r\nimport styles from '../EditableElement.module.css';\r\n\r\ntype EditablePrimitiveElementProps = {\r\n  element: PrimitiveElement;\r\n  scaleFactor: number;\r\n  delta: Position;\r\n  setDelta: (position: Position) => void;\r\n  isSelected: boolean;\r\n  parentRef: React.RefObject<DocumentAndElementEventHandlers>;\r\n}\r\n\r\nfunction EditablePrimitiveElement(\r\n  {\r\n    element,\r\n    scaleFactor,\r\n    delta,\r\n    setDelta,\r\n    isSelected,\r\n    parentRef,\r\n  }: EditablePrimitiveElementProps,\r\n): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const { selectElement, unselectElement, moveElements, resizeElement } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const resizeAnchorRef = useRef(null);\r\n  const dimensions = useSlideElementResize(resizeAnchorRef, element, scaleFactor, resizeElement);\r\n\r\n  const ref = useRef(null);\r\n  useSlideElementActions(ref, element, isSelected, selectElement, unselectElement, parentRef, resizeAnchorRef);\r\n  useElementDragAndDrop(ref, element, scaleFactor, delta, setDelta, moveElements);\r\n\r\n  const resizeAnchorDelta = getResizeAnchorTranslateDelta(element, delta, dimensions);\r\n\r\n  const getPrimitiveElement = () => {\r\n    switch (element.primitiveType) {\r\n    case PrimitiveType.RECTANGLE:\r\n      return (\r\n        <rect\r\n          x={element.position.x}\r\n          y={element.position.y}\r\n          width={dimensions.width}\r\n          height={dimensions.height}\r\n          fill={element.fill}\r\n          stroke={element.stroke}\r\n          style={{ transform: isSelected ? `translate(${delta.x}px, ${delta.y}px)` : undefined }}\r\n          ref={isSelected ? undefined : ref}\r\n        />\r\n      );\r\n    case PrimitiveType.TRIANGLE:\r\n      return (\r\n        <polygon\r\n          points={getTrianglePoints({ ...element, dimensions })}\r\n          fill={element.fill}\r\n          stroke={element.stroke}\r\n          style={{ transform: `translate(${delta.x}px, ${delta.y}px)` }}\r\n          ref={isSelected ? undefined : ref}\r\n        />\r\n      );\r\n    case PrimitiveType.ELLIPSE: {\r\n      const properties = calculateEllipseProperties({ ...element, dimensions });\r\n\r\n      return (\r\n        <ellipse\r\n          cx={properties.cx}\r\n          cy={properties.cy}\r\n          rx={properties.rx}\r\n          ry={properties.ry}\r\n          fill={element.fill}\r\n          stroke={element.stroke}\r\n          style={{ transform: isSelected ? `translate(${delta.x}px, ${delta.y}px)` : undefined }}\r\n          ref={isSelected ? undefined : ref}\r\n        />\r\n      );\r\n    }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {getPrimitiveElement()}\r\n      {\r\n        isSelected &&\r\n          <rect\r\n              x={element.position.x}\r\n              y={element.position.y}\r\n              width={dimensions.width}\r\n              height={dimensions.height}\r\n              fill=\"#2a8ec8\"\r\n              stroke=\"#1563c8\"\r\n              fillOpacity=\"0.3\"\r\n              strokeOpacity=\"0.3\"\r\n              style={{ transform: `translate(${delta.x}px, ${delta.y}px)` }}\r\n              ref={isSelected ? ref : undefined}\r\n          />\r\n      }\r\n      {\r\n        isSelected &&\r\n          <rect\r\n              ref={resizeAnchorRef}\r\n              {...getResizeAnchorProperties(element)}\r\n              className={styles.resizeAnchor}\r\n              style={{ transform: `translate(${resizeAnchorDelta.x}px, ${resizeAnchorDelta.y}px)` }}\r\n          />\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditablePrimitiveElement;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { SLIDE_WIDTH } from '../../model/constants';\r\nimport useEventListener from '../useEventListener';\r\n\r\nfunction useScaleFactorForDragAndDrop<T extends Element>(\r\n  ref: React.RefObject<T>,\r\n): number {\r\n  const [scaleFactor, setScaleFactor] = useState(1);\r\n\r\n  const onResize = () => {\r\n    if (ref?.current) {\r\n      console.log('resized');\r\n      setScaleFactor(SLIDE_WIDTH / ref.current.getBoundingClientRect().width);\r\n    }\r\n  };\r\n\r\n  useEffect(onResize, [ref?.current]);\r\n  useEventListener('resize', onResize);\r\n\r\n  return scaleFactor;\r\n}\r\n\r\nexport default useScaleFactorForDragAndDrop;\r\n","import React, { useRef, useState } from 'react';\r\nimport { ElementType, Slide } from '../../../model/types';\r\nimport styles from './EditableSlideView.module.css';\r\nimport { getSlideBackgroundStyle } from '../../../common/componentsUtils';\r\nimport { SLIDE_HEIGHT, SLIDE_WIDTH } from '../../../model/constants';\r\nimport { UUID } from '../../../model/uuid';\r\nimport { RootState } from '../../../state/reducers';\r\nimport { createNewSlide, isCurrentSlide } from '../../../model/modelUtils';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../../../state';\r\nimport useHotkey from '../../../hooks/hotkeys/useHotkey';\r\nimport EditableImageElement from './Elements/EditableImageElement/EditableImageElement';\r\nimport EditableTextElement from './Elements/EditableTextElement/EditableTextElement';\r\nimport EditablePrimitiveElement from './Elements/EditablePrimitiveElement/EditablePrimitiveElement';\r\nimport useScaleFactorForDragAndDrop from '../../../hooks/dragAndDrop/useScaleFactorForDragAndDrop';\r\n\r\ntype EditableSlideViewProps = {\r\n  slide: Slide;\r\n  selectedElementIDs: UUID[];\r\n}\r\n\r\nfunction EditableSlideView({ slide, selectedElementIDs }: EditableSlideViewProps): JSX.Element {\r\n  const slideBackgroundStyle = getSlideBackgroundStyle(slide);\r\n\r\n  const dispatch = useDispatch();\r\n  const { removeElements } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const ref = useRef(null);\r\n  useHotkey('Delete', () => {\r\n    removeElements();\r\n  }, ref);\r\n\r\n  const scaleFactor = useScaleFactorForDragAndDrop(ref);\r\n  const [delta, setDelta] = useState({ x: 0, y: 0 });\r\n\r\n  return (\r\n    <svg\r\n      viewBox={`0 0 ${SLIDE_WIDTH} ${SLIDE_HEIGHT}`}\r\n      className={styles.editableSlideView}\r\n      style={slideBackgroundStyle}\r\n      ref={ref}\r\n      tabIndex={0}\r\n    >\r\n      {slide.elements.map(element => {\r\n        const isSelected = selectedElementIDs.includes(element.id);\r\n\r\n        switch (element.type) {\r\n        case ElementType.IMAGE:\r\n          return <EditableImageElement\r\n            key={element.id}\r\n            element={element}\r\n            scaleFactor={scaleFactor}\r\n            delta={delta}\r\n            setDelta={setDelta}\r\n            isSelected={isSelected}\r\n            parentRef={ref}\r\n          />;\r\n        case ElementType.TEXT:\r\n          return <EditableTextElement\r\n            key={element.id}\r\n            element={element}\r\n            scaleFactor={scaleFactor}\r\n            delta={delta}\r\n            setDelta={setDelta}\r\n            isSelected={isSelected}\r\n            parentRef={ref}\r\n          />;\r\n        case ElementType.PRIMITIVE:\r\n          return <EditablePrimitiveElement\r\n            key={element.id}\r\n            element={element}\r\n            scaleFactor={scaleFactor}\r\n            delta={delta}\r\n            setDelta={setDelta}\r\n            isSelected={isSelected}\r\n            parentRef={ref}\r\n          />;\r\n        }\r\n      })}\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState): EditableSlideViewProps {\r\n  return {\r\n    slide: state.presentation.slides.find(slide => isCurrentSlide(slide, state.selections.selectedSlideIDs)) || createNewSlide(),\r\n    selectedElementIDs: state.selections.selectedElementIDs,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditableSlideView);\r\n","import React, { useEffect } from 'react';\r\n\r\nfunction useFullscreen(\r\n  ref: React.RefObject<HTMLElement>,\r\n  isFullscreen: boolean,\r\n  onFullscreenExit: () => void,\r\n): void {\r\n  useEffect(() => {\r\n    const view = ref.current;\r\n\r\n    if (view) {\r\n      if (isFullscreen) {\r\n        if (!document.fullscreenElement) {\r\n          view.requestFullscreen().catch(error => alert(error.message));\r\n        }\r\n      }\r\n    }\r\n\r\n    const onFullscreenChange = () => {\r\n      if (!document.fullscreenElement) {\r\n        onFullscreenExit();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('fullscreenchange', onFullscreenChange);\r\n\r\n    return () => {\r\n      document.removeEventListener('fullscreenchange', onFullscreenChange);\r\n    };\r\n  }, [isFullscreen]);\r\n}\r\n\r\nexport default useFullscreen;\r\n","import React, { useRef } from 'react';\r\nimport styles from './EditableSlideViewWrapper.module.css';\r\nimport EditableSlideView from '../EditableSlideView/EditableSlideView';\r\nimport { RootState } from '../../../state/reducers';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../../../state';\r\nimport useFullscreen from '../../../hooks/useFullscreen';\r\n\r\ntype EditableSlideViewWrapperProps = {\r\n  isDemonstrating: boolean;\r\n};\r\n\r\nfunction EditableSlideViewWrapper({ isDemonstrating }: EditableSlideViewWrapperProps): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const { stopDemonstration } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  useFullscreen(ref, isDemonstrating, stopDemonstration);\r\n\r\n\r\n  return (\r\n    <div className={styles.wrapper} ref={ref}>\r\n      <EditableSlideView />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState): EditableSlideViewWrapperProps {\r\n  return {\r\n    isDemonstrating: state.isDemonstrating,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditableSlideViewWrapper);\r\n","import React from 'react';\r\nimport styles from './Workspace.module.css';\r\nimport EditableSlideViewWrapper from './EditableSlideViewWrapper/EditableSlideViewWrapper';\r\n\r\n\r\nfunction Workspace(): JSX.Element {\r\n  return (\r\n    <div className={styles.workspace}>\r\n      <EditableSlideViewWrapper />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Workspace;\r\n","import useEventListener from '../useEventListener';\r\nimport Handler from './handler';\r\n\r\nfunction useHotkeyCtrl(\r\n  key: string,\r\n  handler: Handler,\r\n): void {\r\n  useEventListener('keydown', (e: Event) => {\r\n    const event = e as KeyboardEvent;\r\n\r\n    if (event.ctrlKey && event.key === key) {\r\n      event.preventDefault();\r\n      handler(event);\r\n    }\r\n  });\r\n}\r\n\r\nexport default useHotkeyCtrl;\r\n","import useHotkeyCtrl from './useHotkeyCtrl';\r\nimport useHotkey from './useHotkey';\r\n\r\ntype HotkeyAction = () => void;\r\n\r\nfunction useAppHotkeys(\r\n  newPresentation: HotkeyAction,\r\n  openPresentation: HotkeyAction,\r\n  savePresentation: HotkeyAction,\r\n  undo: HotkeyAction,\r\n  redo: HotkeyAction,\r\n  nextSlide: HotkeyAction,\r\n  previousSlide: HotkeyAction,\r\n): void {\r\n  useHotkeyCtrl('s', savePresentation);\r\n  useHotkeyCtrl('o', openPresentation);\r\n  useHotkeyCtrl('m', newPresentation);\r\n\r\n  useHotkeyCtrl('z', undo);\r\n  useHotkeyCtrl('y', redo);\r\n\r\n  useHotkey('ArrowRight', nextSlide);\r\n  useHotkey('ArrowLeft', previousSlide);\r\n}\r\n\r\nexport default useAppHotkeys;\r\n","import { Dimensions, Presentation } from '../model/types';\r\nimport { DEFAULT_IMAGE_WIDTH } from '../model/constants';\r\n\r\nfunction openFile(): Promise<File> {\r\n  return new Promise(resolve => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n\r\n    input.addEventListener('change', (event: Event) => {\r\n      const target = event.target as HTMLInputElement;\r\n      if (target?.files) {\r\n        resolve(target.files[0]);\r\n      }\r\n    });\r\n\r\n    input.click();\r\n  });\r\n}\r\n\r\nexport function savePresentationJSON(presentation: Presentation, filename: string): void {\r\n  const file = new Blob([JSON.stringify(presentation)], {\r\n    type: 'text/plain',\r\n  });\r\n  const url = URL.createObjectURL(file);\r\n\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.download = filename + '.json';\r\n\r\n  link.click();\r\n  URL.revokeObjectURL(url);\r\n}\r\n\r\nexport function openPresentationJSON(): Promise<Presentation> {\r\n  return new Promise((resolve, reject) => {\r\n    openFile()\r\n      .then(file => {\r\n        const reader = new FileReader();\r\n\r\n        reader.addEventListener('loadend', (event: ProgressEvent<FileReader>) => {\r\n          if (event.target?.result) {\r\n            try {\r\n              const result = JSON.parse(event.target.result.toString());\r\n              resolve(result);\r\n            } catch (e) {\r\n              reject('Invalid presentation format');\r\n            }\r\n          }\r\n        });\r\n\r\n        reader.readAsText(file, 'UTF-8');\r\n      });\r\n  });\r\n}\r\n\r\nexport function openImageBase64(): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    openFile()\r\n      .then(file => {\r\n        const reader = new FileReader();\r\n\r\n        reader.addEventListener('loadend', (event: ProgressEvent<FileReader>) => {\r\n          if (event.target?.result) {\r\n            const image = new Image();\r\n\r\n            image.addEventListener('load', () => {\r\n              resolve(image);\r\n            });\r\n            image.addEventListener('error', () => {\r\n              reject('Invalid image');\r\n            });\r\n\r\n            image.src = event.target.result.toString();\r\n          }\r\n        });\r\n\r\n        reader.readAsDataURL(file);\r\n      });\r\n  });\r\n}\r\n\r\nexport function pickColor(): Promise<string> {\r\n  return new Promise(resolve => {\r\n    const input = document.createElement('input');\r\n    input.type = 'color';\r\n\r\n    input.addEventListener('change', (event: Event) => {\r\n      const target = event.target as HTMLInputElement;\r\n      if (target?.value) {\r\n        console.log(target.value);\r\n        resolve(target.value);\r\n      }\r\n    });\r\n\r\n    input.click();\r\n  });\r\n}\r\n\r\nexport function scaleImage(width: number, height: number): Dimensions {\r\n  const result = { width, height };\r\n  const aspectRatio = width / height;\r\n\r\n  if (result.width > DEFAULT_IMAGE_WIDTH) {\r\n    result.width = DEFAULT_IMAGE_WIDTH;\r\n    result.height = result.width / aspectRatio;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import React, { Dispatch } from 'react';\r\nimport Ribbon from './components/Ribbon/Ribbon';\r\nimport SlidePanel from './components/SlidePanel/SlidePanel';\r\nimport styles from './App.module.css';\r\nimport useConfirmLeaving from './hooks/useConfirmLeaving';\r\nimport { connect } from 'react-redux';\r\nimport { actionCreators } from './state';\r\nimport { Presentation, PrimitiveType } from './model/types';\r\nimport { RootState } from './state/reducers';\r\nimport { getRibbonMenuItems } from './model/uiParameters/menu';\r\nimport Workspace from './components/Workspace/Workspace';\r\nimport useAppHotkeys from './hooks/hotkeys/useAppHotkeys';\r\nimport { openImageBase64, openPresentationJSON, pickColor, savePresentationJSON, scaleImage } from './common/fileUtils';\r\nimport { DEFAULT_ELEMENT_POSITION, DEFAULT_PRIMITIVE_DIMENSIONS, DEFAULT_TEXT_DIMENSIONS } from './model/constants';\r\nimport Action from './state/actions/actions';\r\n\r\ntype AppProps = AppStateProps & AppDispatchProps;\r\n\r\ntype AppStateProps = {\r\n  presentation: Presentation;\r\n};\r\n\r\ntype AppDispatchProps = {\r\n  openPresentation: () => void;\r\n  newPresentation: () => void;\r\n  savePresentation: (presentation: Presentation) => () => void;\r\n  undo: () => void;\r\n  redo: () => void;\r\n  addText: () => void;\r\n  addImage: () => void;\r\n  addPrimitive: (type: PrimitiveType) => void;\r\n  addSlide: () => void;\r\n  removeSlides: () => void;\r\n  nextSlide: () => void;\r\n  previousSlide: () => void;\r\n  setSlideBackgroundImage: () => void;\r\n  setSlideBackgroundColor: () => void;\r\n  removeElements: () => void;\r\n  startDemonstrationFromStart: () => void;\r\n  startDemonstration: () => void;\r\n};\r\n\r\nfunction App(\r\n  {\r\n    presentation,\r\n    openPresentation,\r\n    newPresentation,\r\n    savePresentation,\r\n    undo,\r\n    redo,\r\n    addText,\r\n    addImage,\r\n    addPrimitive,\r\n    addSlide,\r\n    removeSlides,\r\n    nextSlide,\r\n    previousSlide,\r\n    setSlideBackgroundImage,\r\n    setSlideBackgroundColor,\r\n    removeElements,\r\n    startDemonstrationFromStart,\r\n    startDemonstration,\r\n  }: AppProps,\r\n): JSX.Element {\r\n  useConfirmLeaving();\r\n\r\n  useAppHotkeys(\r\n    newPresentation,\r\n    openPresentation,\r\n    savePresentation(presentation),\r\n    undo,\r\n    redo,\r\n    nextSlide,\r\n    previousSlide,\r\n  );\r\n\r\n  const menuItems = getRibbonMenuItems(\r\n    newPresentation,\r\n    openPresentation,\r\n    savePresentation(presentation),\r\n    addText,\r\n    addImage,\r\n    addPrimitive,\r\n    addSlide,\r\n    removeSlides,\r\n    setSlideBackgroundImage,\r\n    setSlideBackgroundColor,\r\n    removeElements,\r\n    undo,\r\n    redo,\r\n    startDemonstrationFromStart,\r\n    startDemonstration,\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Ribbon menuItems={menuItems} />\r\n      <div className={styles.main}>\r\n        <SlidePanel />\r\n        <Workspace />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: RootState): AppStateProps {\r\n  return {\r\n    presentation: state.presentation,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch<Action>): AppDispatchProps {\r\n  return {\r\n    openPresentation: () => {\r\n      const confirmed = confirm('Are you sure? All unsaved changes will be lost.');\r\n      if (confirmed) {\r\n        openPresentationJSON()\r\n          .then(presentation => actionCreators.openPresentation(presentation)(dispatch))\r\n          .catch(error => alert(error));\r\n      }\r\n    },\r\n\r\n    newPresentation: () => {\r\n      const confirmed = confirm('Are you sure? All unsaved changes will be lost.');\r\n      if (confirmed) {\r\n        actionCreators.newPresentation()(dispatch);\r\n      }\r\n    },\r\n\r\n    savePresentation: (presentation: Presentation) => {\r\n      return () => {\r\n        savePresentationJSON(presentation, presentation.title);\r\n      };\r\n    },\r\n\r\n    undo: () => actionCreators.undo()(dispatch),\r\n    redo: () => actionCreators.redo()(dispatch),\r\n\r\n    addText: () => {\r\n      const text = prompt('Enter text') || '';\r\n      if (text !== '') {\r\n        actionCreators.addText(DEFAULT_ELEMENT_POSITION, DEFAULT_TEXT_DIMENSIONS, text)(dispatch);\r\n      }\r\n    },\r\n\r\n    addImage: () => {\r\n      openImageBase64()\r\n        .then(image => actionCreators.addImage(DEFAULT_ELEMENT_POSITION, scaleImage(image.width, image.height), image.src)(dispatch))\r\n        .catch(error => alert(error));\r\n    },\r\n\r\n    addPrimitive: (type: PrimitiveType) => {\r\n      actionCreators.addPrimitive(DEFAULT_ELEMENT_POSITION, DEFAULT_PRIMITIVE_DIMENSIONS, type)(dispatch);\r\n    },\r\n\r\n    addSlide: () => actionCreators.addSlide()(dispatch),\r\n    removeSlides: () => actionCreators.removeSlides()(dispatch),\r\n\r\n    nextSlide: () => actionCreators.nextSlide()(dispatch),\r\n    previousSlide: () => actionCreators.previousSlide()(dispatch),\r\n\r\n    setSlideBackgroundImage: () => {\r\n      openImageBase64()\r\n        .then(image => actionCreators.setSlideBackgroundImage(image.src)(dispatch))\r\n        .catch(error => alert(error));\r\n    },\r\n\r\n    setSlideBackgroundColor: () => {\r\n      pickColor()\r\n        .then(color => actionCreators.setSlideBackgroundColor(color)(dispatch))\r\n        .catch(error => alert(error));\r\n    },\r\n\r\n    removeElements: () => actionCreators.removeElements()(dispatch),\r\n\r\n    startDemonstrationFromStart: () => {\r\n      actionCreators.setFirstCurrentSlide()(dispatch);\r\n      actionCreators.startDemonstration()(dispatch);\r\n    },\r\n    startDemonstration: () => actionCreators.startDemonstration()(dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { DropdownMenuItemType, MenuItemType } from '../../components/Ribbon/RibbonTypes';\r\nimport { PrimitiveType } from '../types';\r\n\r\ntype MenuAction = () => void;\r\ntype AddPrimitiveMenuAction = (type: PrimitiveType) => void;\r\n\r\nexport function getRibbonMenuItems(\r\n  newPresentation: MenuAction,\r\n  openPresentation: MenuAction,\r\n  savePresentation: MenuAction,\r\n  addText: MenuAction,\r\n  addImage: MenuAction,\r\n  addPrimitive: AddPrimitiveMenuAction,\r\n  addSlide: MenuAction,\r\n  removeSlide: MenuAction,\r\n  setSlideBackgroundImage: MenuAction,\r\n  setSlideBackgroundColor: MenuAction,\r\n  removeElements: MenuAction,\r\n  undo: MenuAction,\r\n  redo: MenuAction,\r\n  startDemonstrationFromStart: MenuAction,\r\n  startDemonstration: MenuAction,\r\n): DropdownMenuItemType[] {\r\n  return [\r\n    {\r\n      label: 'File',\r\n      items: [\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'New',\r\n          action: newPresentation,\r\n          icon: 'add',\r\n        },\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'Open',\r\n          action: openPresentation,\r\n          icon: 'upload',\r\n        },\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'Download',\r\n          action: savePresentation,\r\n          icon: 'download',\r\n        },\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'Export',\r\n          action: () => console.log('Export'),\r\n          icon: 'picture_as_pdf',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Edit',\r\n      items: [\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'Undo',\r\n          action: undo,\r\n          icon: 'undo',\r\n        },\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'Redo',\r\n          action: redo,\r\n          icon: 'redo',\r\n        },\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'Delete',\r\n          action: removeElements,\r\n          icon: 'delete',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Insert',\r\n      items: [\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'Image',\r\n          action: addImage,\r\n          icon: 'image',\r\n        },\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'Text',\r\n          action: addText,\r\n          icon: 'text_fields',\r\n        },\r\n        {\r\n          type: MenuItemType.Submenu,\r\n          label: 'Primitive',\r\n          icon: 'dashboard',\r\n          items: [\r\n            {\r\n              type: MenuItemType.MenuButton,\r\n              label: 'Rectangle',\r\n              action: () => addPrimitive(PrimitiveType.RECTANGLE),\r\n              icon: 'rectangle',\r\n            },\r\n            {\r\n              type: MenuItemType.MenuButton,\r\n              label: 'Triangle',\r\n              action: () => addPrimitive(PrimitiveType.TRIANGLE),\r\n              icon: 'change_history',\r\n            },\r\n            {\r\n              type: MenuItemType.MenuButton,\r\n              label: 'Ellipse',\r\n              action: () => addPrimitive(PrimitiveType.ELLIPSE),\r\n              icon: 'circle',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Slide',\r\n      items: [\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'New',\r\n          action: addSlide,\r\n          icon: 'add_box',\r\n        },\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'Delete',\r\n          action: removeSlide,\r\n          icon: 'remove_circle_outline',\r\n        },\r\n        {\r\n          type: MenuItemType.Submenu,\r\n          label: 'Background',\r\n          icon: 'wallpaper',\r\n          items: [\r\n            {\r\n              type: MenuItemType.MenuButton,\r\n              label: 'Color',\r\n              action: setSlideBackgroundColor,\r\n              icon: 'format_color_fill',\r\n            },\r\n            {\r\n              type: MenuItemType.MenuButton,\r\n              label: 'Image',\r\n              action: setSlideBackgroundImage,\r\n              icon: 'image',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Demonstration',\r\n      items: [\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'From start',\r\n          action: startDemonstrationFromStart,\r\n          icon: 'restart_alt',\r\n        },\r\n        {\r\n          type: MenuItemType.MenuButton,\r\n          label: 'From current slide',\r\n          action: startDemonstration,\r\n          icon: 'play_arrow',\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n}\r\n","import { BackgroundType, Dimensions, Editor, ElementType, Position, Presentation, PrimitiveType } from './types';\r\nimport { generateUUID, UUID } from './uuid';\r\nimport {\r\n  concatWithSelectedSlideElements,\r\n  createEditor,\r\n  createNewSlide,\r\n  getCurrentSlideIndex,\r\n  isCurrentSlide,\r\n  moveElementOnTop,\r\n  selectNearestUnselectedSlide,\r\n} from './modelUtils';\r\nimport {\r\n  DEFAULT_PRIMITIVE_FILL,\r\n  DEFAULT_PRIMITIVE_STROKE,\r\n  DEFAULT_TEXT_COLOR,\r\n  DEFAULT_TEXT_FONT,\r\n  DEFAULT_TEXT_SIZE,\r\n} from './constants';\r\n\r\nexport function openPresentation(editor: Editor, presentation: Presentation): Editor {\r\n  return createEditor(presentation);\r\n}\r\n\r\nexport function setPresentationTitle(\r\n  editor: Editor,\r\n  title: string,\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      title,\r\n    },\r\n  };\r\n}\r\n\r\nexport function addSlide(editor: Editor): Editor {\r\n  const newSlide = createNewSlide();\r\n\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides:\r\n        editor.presentation.slides.length === 0\r\n          ? [newSlide]\r\n          : editor.presentation.slides.flatMap(slide =>\r\n            isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n              ? [slide, newSlide]\r\n              : slide,\r\n          ),\r\n    },\r\n    selections: {\r\n      ...editor.selections,\r\n      selectedSlideIDs: [newSlide.id],\r\n    },\r\n  };\r\n}\r\n\r\nexport function removeSlides(editor: Editor): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.filter(\r\n        slide => !editor.selections.selectedSlideIDs.includes(slide.id),\r\n      ),\r\n    },\r\n    selections: {\r\n      ...editor.selections,\r\n      selectedSlideIDs: selectNearestUnselectedSlide(editor),\r\n    },\r\n  };\r\n}\r\n\r\nexport function changeSlidesOrder(editor: Editor, slideIDs: UUID[]): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: slideIDs.flatMap(\r\n        slideID =>\r\n          editor.presentation.slides.find(slide => slide.id === slideID) || [],\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function setCurrentSlide(editor: Editor, slideID: UUID): Editor {\r\n  return {\r\n    ...editor,\r\n    selections: {\r\n      ...editor.selections,\r\n      selectedSlideIDs: [slideID],\r\n      selectedElementIDs: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport function selectSlide(editor: Editor, slideID: UUID): Editor {\r\n  return {\r\n    ...editor,\r\n    selections: {\r\n      ...editor.selections,\r\n      selectedSlideIDs: editor.presentation.slides.flatMap(slide =>\r\n        editor.selections.selectedSlideIDs.concat(slideID).includes(slide.id) ? slide.id : [],\r\n      ),\r\n      selectedElementIDs: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport function setFirstCurrentSlide(editor: Editor): Editor {\r\n  return {\r\n    ...editor,\r\n    selections: {\r\n      selectedSlideIDs: [editor.presentation.slides[0].id],\r\n      selectedElementIDs: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport function nextSlide(editor: Editor): Editor {\r\n  const currentSlideIndex = getCurrentSlideIndex(editor);\r\n\r\n  return {\r\n    ...editor,\r\n    selections: {\r\n      selectedSlideIDs: currentSlideIndex < editor.presentation.slides.length - 1\r\n        ? [editor.presentation.slides[currentSlideIndex + 1].id]\r\n        : editor.selections.selectedSlideIDs,\r\n      selectedElementIDs: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport function previousSlide(editor: Editor): Editor {\r\n  const currentSlideIndex = getCurrentSlideIndex(editor);\r\n\r\n  return {\r\n    ...editor,\r\n    selections: {\r\n      selectedSlideIDs: currentSlideIndex > 0\r\n        ? [editor.presentation.slides[currentSlideIndex - 1].id]\r\n        : editor.selections.selectedSlideIDs,\r\n      selectedElementIDs: [],\r\n    },\r\n  };\r\n}\r\n\r\nexport function setSlideBackgroundColor(editor: Editor, color: string): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            background: {\r\n              type: BackgroundType.SOLID,\r\n              color,\r\n            },\r\n          }\r\n          : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function setSlideBackgroundImage(editor: Editor, src: string): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            background: {\r\n              type: BackgroundType.IMAGE,\r\n              src,\r\n            },\r\n          }\r\n          : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function removeElements(editor: Editor): Editor {\r\n  return {\r\n    ...editor,\r\n    selections: {\r\n      ...editor.selections,\r\n      selectedElementIDs: [],\r\n    },\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            elements: slide.elements.filter(\r\n              element => !editor.selections.selectedElementIDs.includes(element.id),\r\n            ),\r\n          }\r\n          : { ...slide },\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function addText(\r\n  editor: Editor, {\r\n    position,\r\n    dimensions,\r\n    value,\r\n  }: {\r\n    position: Position;\r\n    dimensions: Dimensions;\r\n    value: string;\r\n  },\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: concatWithSelectedSlideElements(\r\n        editor,\r\n        {\r\n          id: generateUUID(),\r\n          type: ElementType.TEXT,\r\n          position,\r\n          dimensions,\r\n          value,\r\n          size: DEFAULT_TEXT_SIZE,\r\n          font: DEFAULT_TEXT_FONT,\r\n          color: DEFAULT_TEXT_COLOR,\r\n        },\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function setTextValue(\r\n  editor: Editor, {\r\n    elementID,\r\n    value,\r\n  }: {\r\n    elementID: UUID;\r\n    value: string;\r\n  },\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            elements: slide.elements.map(element =>\r\n              element.type === ElementType.TEXT &&\r\n              element.id === elementID\r\n                ? {\r\n                  ...element,\r\n                  value,\r\n                }\r\n                : element,\r\n            ),\r\n          }\r\n          : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function setTextFont(\r\n  editor: Editor, {\r\n    elementID,\r\n    font,\r\n  }: {\r\n    elementID: UUID;\r\n    font: string;\r\n  },\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            elements: slide.elements.map(element =>\r\n              element.type === ElementType.TEXT &&\r\n              element.id === elementID\r\n                ? {\r\n                  ...element,\r\n                  font,\r\n                }\r\n                : element,\r\n            ),\r\n          }\r\n          : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function setTextSize(\r\n  editor: Editor, {\r\n    elementID,\r\n    size,\r\n  }: {\r\n    elementID: UUID;\r\n    size: number;\r\n  },\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            elements: slide.elements.map(element =>\r\n              element.type === ElementType.TEXT &&\r\n              element.id === elementID\r\n                ? {\r\n                  ...element,\r\n                  size,\r\n                }\r\n                : element,\r\n            ),\r\n          }\r\n          : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function setTextColor(\r\n  editor: Editor, {\r\n    elementID,\r\n    color,\r\n  }: {\r\n    elementID: UUID;\r\n    color: string;\r\n  },\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            elements: slide.elements.map(element =>\r\n              element.type === ElementType.TEXT &&\r\n              element.id === elementID\r\n                ? {\r\n                  ...element,\r\n                  color,\r\n                }\r\n                : element,\r\n            ),\r\n          }\r\n          : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function addImage(\r\n  editor: Editor, {\r\n    position,\r\n    dimensions,\r\n    src,\r\n  }: {\r\n    position: Position,\r\n    dimensions: Dimensions,\r\n    src: string,\r\n  },\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: concatWithSelectedSlideElements(\r\n        editor,\r\n        {\r\n          id: generateUUID(),\r\n          type: ElementType.IMAGE,\r\n          position,\r\n          dimensions,\r\n          src,\r\n        },\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function addPrimitive(\r\n  editor: Editor, {\r\n    position,\r\n    dimensions,\r\n    primitiveType,\r\n  }: {\r\n    position: Position,\r\n    dimensions: Dimensions,\r\n    primitiveType: PrimitiveType,\r\n  },\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: concatWithSelectedSlideElements(\r\n        editor,\r\n        {\r\n          id: generateUUID(),\r\n          type: ElementType.PRIMITIVE,\r\n          primitiveType,\r\n          position,\r\n          dimensions,\r\n          fill: DEFAULT_PRIMITIVE_FILL,\r\n          stroke: DEFAULT_PRIMITIVE_STROKE,\r\n        },\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function setPrimitiveFillColor(\r\n  editor: Editor, {\r\n    elementID,\r\n    fill,\r\n  }: {\r\n    elementID: UUID;\r\n    fill: string;\r\n  },\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            elements: slide.elements.map(element =>\r\n              element.type === ElementType.PRIMITIVE &&\r\n              element.id === elementID\r\n                ? {\r\n                  ...element,\r\n                  fill,\r\n                }\r\n                : element,\r\n            ),\r\n          }\r\n          : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function setPrimitiveStrokeColor(\r\n  editor: Editor, {\r\n    elementID,\r\n    stroke,\r\n  }: {\r\n    elementID: UUID;\r\n    stroke: string;\r\n  },\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            elements: slide.elements.map(element =>\r\n              element.type === ElementType.PRIMITIVE &&\r\n              element.id === elementID\r\n                ? {\r\n                  ...element,\r\n                  stroke,\r\n                }\r\n                : element,\r\n            ),\r\n          }\r\n          : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function selectElement(editor: Editor, elementID: UUID): Editor {\r\n  return {\r\n    ...editor,\r\n    selections: {\r\n      ...editor.selections,\r\n      selectedElementIDs: editor.selections.selectedElementIDs.concat(elementID),\r\n    },\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(\r\n        slide => isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            elements: moveElementOnTop(slide.elements, elementID),\r\n          } : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function unselectElement(editor: Editor, elementID: UUID): Editor {\r\n  return {\r\n    ...editor,\r\n    selections: {\r\n      ...editor.selections,\r\n      selectedElementIDs: editor.selections.selectedElementIDs.filter(id => id != elementID),\r\n    },\r\n  };\r\n}\r\n\r\nexport function moveElements(\r\n  editor: Editor,\r\n  positionDiff: Position,\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            elements: slide.elements.map(element =>\r\n              editor.selections.selectedElementIDs.includes(element.id)\r\n                ? {\r\n                  ...element,\r\n                  position: {\r\n                    x: element.position.x + positionDiff.x,\r\n                    y: element.position.y + positionDiff.y,\r\n                  },\r\n                }\r\n                : element,\r\n            ),\r\n          }\r\n          : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function resizeElement(\r\n  editor: Editor,\r\n  {\r\n    elementID,\r\n    dimensions,\r\n  }: {\r\n    elementID: UUID;\r\n    dimensions: Dimensions;\r\n  },\r\n): Editor {\r\n  return {\r\n    ...editor,\r\n    presentation: {\r\n      ...editor.presentation,\r\n      slides: editor.presentation.slides.map(slide =>\r\n        isCurrentSlide(slide, editor.selections.selectedSlideIDs)\r\n          ? {\r\n            ...slide,\r\n            elements: slide.elements.map(element =>\r\n              element.id === elementID\r\n                ? {\r\n                  ...element,\r\n                  dimensions,\r\n                }\r\n                : element,\r\n            ),\r\n          }\r\n          : slide,\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport function undo(editor: Editor): Editor {\r\n  if (editor.history.pastStates.length > 0) {\r\n    const currentHistoryState = {\r\n      presentation: editor.presentation,\r\n      selections: editor.selections,\r\n    };\r\n\r\n    const previousHistoryState = editor.history.pastStates[editor.history.pastStates.length - 1];\r\n\r\n    return {\r\n      ...editor,\r\n      presentation: previousHistoryState.presentation,\r\n      selections: previousHistoryState.selections,\r\n      history: {\r\n        pastStates: editor.history.pastStates.slice(0, editor.history.pastStates.length - 1),\r\n        futureStates: [currentHistoryState, ...editor.history.futureStates],\r\n      },\r\n    };\r\n  }\r\n\r\n  return editor;\r\n}\r\n\r\nexport function redo(editor: Editor): Editor {\r\n  if (editor.history.futureStates.length > 0) {\r\n    const currentHistoryState = {\r\n      presentation: editor.presentation,\r\n      selections: editor.selections,\r\n    };\r\n\r\n    const nextHistoryState = editor.history.futureStates[0];\r\n\r\n    return {\r\n      ...editor,\r\n      presentation: nextHistoryState.presentation,\r\n      selections: editor.history.futureStates.length != 1 ? nextHistoryState.selections : editor.selections,\r\n      history: {\r\n        pastStates: [...editor.history.pastStates, currentHistoryState],\r\n        futureStates: editor.history.futureStates.slice(1),\r\n      },\r\n    };\r\n  }\r\n\r\n  return editor;\r\n}\r\n\r\nexport function startDemonstration(editor: Editor): Editor {\r\n  return {\r\n    ...editor,\r\n    isDemonstrating: true,\r\n  };\r\n}\r\n\r\nexport function stopDemonstration(editor: Editor): Editor {\r\n  return {\r\n    ...editor,\r\n    isDemonstrating: false,\r\n  };\r\n}\r\n\r\nexport function exportPresentation(presentation: Presentation): void {\r\n  // TODO: implement\r\n}\r\n","import { createEditor, createNewPresentation } from '../../model/modelUtils';\r\nimport { Editor } from '../../model/types';\r\nimport Action, { ActionType } from '../actions/actions';\r\nimport {\r\n  addImage,\r\n  addPrimitive,\r\n  addSlide,\r\n  addText,\r\n  moveElements,\r\n  nextSlide,\r\n  openPresentation,\r\n  previousSlide,\r\n  removeElements,\r\n  removeSlides,\r\n  resizeElement,\r\n  selectElement,\r\n  selectSlide,\r\n  setCurrentSlide,\r\n  setFirstCurrentSlide,\r\n  setPresentationTitle,\r\n  setPrimitiveFillColor,\r\n  setPrimitiveStrokeColor,\r\n  setSlideBackgroundColor,\r\n  setSlideBackgroundImage,\r\n  setTextColor,\r\n  setTextFont,\r\n  setTextSize,\r\n  setTextValue,\r\n  startDemonstration,\r\n  stopDemonstration,\r\n  unselectElement,\r\n} from '../../model/actions';\r\n\r\nconst initialState = createEditor(createNewPresentation());\r\n\r\nfunction editorReducer(state = initialState, action: Action): Editor {\r\n  switch (action.type) {\r\n  case ActionType.OPEN_PRESENTATION:\r\n    return openPresentation(state, action.payload);\r\n  case ActionType.NEW_PRESENTATION:\r\n    return createEditor(createNewPresentation());\r\n  case ActionType.CHANGE_PRESENTATION_TITLE:\r\n    return setPresentationTitle(state, action.payload);\r\n  case ActionType.SET_TEXT_VALUE:\r\n    return setTextValue(state, action.payload);\r\n  case ActionType.SET_TEXT_FONT:\r\n    return setTextFont(state, action.payload);\r\n  case ActionType.SET_TEXT_SIZE:\r\n    return setTextSize(state, action.payload);\r\n  case ActionType.SET_TEXT_COLOR:\r\n    return setTextColor(state, action.payload);\r\n  case ActionType.SET_PRIMITIVE_FILL_COLOR:\r\n    return setPrimitiveFillColor(state, action.payload);\r\n  case ActionType.SET_PRIMITIVE_STROKE_COLOR:\r\n    return setPrimitiveStrokeColor(state, action.payload);\r\n  case ActionType.SELECT_ELEMENT:\r\n    return selectElement(state, action.payload);\r\n  case ActionType.UNSELECT_ELEMENT:\r\n    return unselectElement(state, action.payload);\r\n  case ActionType.MOVE_ELEMENTS:\r\n    return moveElements(state, action.payload);\r\n  case ActionType.RESIZE_ELEMENT:\r\n    return resizeElement(state, action.payload);\r\n  case ActionType.REMOVE_ELEMENTS:\r\n    return removeElements(state);\r\n  case ActionType.ADD_SLIDE:\r\n    return addSlide(state);\r\n  case ActionType.REMOVE_SLIDES:\r\n    return removeSlides(state);\r\n  case ActionType.NEXT_SLIDE:\r\n    return nextSlide(state);\r\n  case ActionType.PREVIOUS_SLIDE:\r\n    return previousSlide(state);\r\n  case ActionType.SET_SLIDE_BACKGROUND_IMAGE:\r\n    return setSlideBackgroundImage(state, action.payload);\r\n  case ActionType.SET_SLIDE_BACKGROUND_COLOR:\r\n    return setSlideBackgroundColor(state, action.payload);\r\n  case ActionType.SET_CURRENT_SLIDE:\r\n    return setCurrentSlide(state, action.payload);\r\n  case ActionType.SELECT_SLIDE:\r\n    return selectSlide(state, action.payload);\r\n  case ActionType.SET_FIRST_CURRENT_SLIDE:\r\n    return setFirstCurrentSlide(state);\r\n  case ActionType.ADD_TEXT:\r\n    return addText(state, action.payload);\r\n  case ActionType.ADD_IMAGE:\r\n    return addImage(state, action.payload);\r\n  case ActionType.ADD_PRIMITIVE:\r\n    return addPrimitive(state, action.payload);\r\n  case ActionType.START_DEMONSTRATION:\r\n    return startDemonstration(state);\r\n  case ActionType.STOP_DEMONSTRATION:\r\n    return stopDemonstration(state);\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default editorReducer;\r\n","import editorReducer from './editorReducer';\r\nimport { Editor } from '../../model/types';\r\nimport Action, { ActionType, STATEFUL_ACTIONS } from '../actions/actions';\r\nimport { createEditor, createNewPresentation, saveState } from '../../model/modelUtils';\r\nimport { redo, undo } from '../../model/actions';\r\n\r\nfunction undoable(reducer: typeof editorReducer): typeof editorReducer {\r\n  const initialState = createEditor(createNewPresentation());\r\n\r\n  return function (state = initialState, action: Action): Editor {\r\n    switch (action.type) {\r\n    case ActionType.UNDO:\r\n      return undo(state);\r\n    case ActionType.REDO:\r\n      return redo(state);\r\n    default: {\r\n      const newEditor = reducer(state, action);\r\n      if (STATEFUL_ACTIONS.includes(action.type)) {\r\n        return saveState(state, newEditor);\r\n      }\r\n      return newEditor;\r\n    }\r\n    }\r\n  };\r\n}\r\n\r\nexport default undoable;\r\n","import editorReducer from './editorReducer';\r\nimport undoable from './undoable';\r\n\r\nconst reducer = undoable(editorReducer);\r\n\r\nexport default reducer;\r\nexport type RootState = ReturnType<typeof reducer>;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\n\r\nconst composeEnhancers = (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  undefined,\r\n  composeEnhancers(applyMiddleware(thunk)),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './state/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}